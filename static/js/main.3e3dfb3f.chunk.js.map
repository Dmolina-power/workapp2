{"version":3,"sources":["redux/User/user.types.js","redux/User/user.reducer.js","redux/rootReducer.js","Firebase/Utils.js","Firebase/config.js","redux/User/user.actions.js","redux/User/user.helpers.js","redux/User/user.sagas.js","redux/createStore.js","redux/rootSaga.js","components/AuthWrapper/index.js","components/forms/FormInput/index.js","components/forms/Button/index.js","components/PasswordReset/index.js","components/StudioHeader/index.js","Pages/game/index.js","components/Chat/index.js","components/Navbar/Navbar.js","components/SideBar/index.js","Pages/Feed/index.js","components/Carousel/index.js","components/marketing/index.js","components/Footer/index.js","components/SignIn/index.js","components/SignUpModal/index.js","Pages/Home/index.js","Pages/Login/index.js","components/Signup/index.js","Pages/SignUp/index.js","App.js","serviceWorker.js","index.js"],"names":["userTypes","EMAIL_SIGN_IN_START","SIGN_IN_SUCCESS","CHECK_USER_SESSION","SIGN_OUT_USER_START","SIGN_OUT_USER_SUCCESS","SIGN_UP_USER_START","RESET_PASSWORD_START","RESET_PASSWORD_SUCCESS","GOOGLE_SIGN_IN_START","USER_ERROR","RESET_USER_STATE","INITIAL_STATE","currentUser","resetPasswordSuccess","userErr","userReducer","state","arguments","length","undefined","action","type","_objectSpread","payload","rootReducer","combineReducers","user","configStorage","key","storage","whitelist","persistReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","googleProvider","GoogleAuthProvider","handleUserProfile","async","userAuth","additionalData","_ref","uid","userRef","doc","concat","get","exists","displayName","email","timestamp","Date","userRoles","set","createdDate","err","signInSuccess","userError","handleResetPasswordAPI","config","url","Promise","resolve","reject","sendPasswordResetEmail","then","catch","getSnapshotFromUserAuth","call","snapshot","put","id","data","emailSignIn","password","signInWithEmailAndPassword","onEmailSignInStart","takeLatest","isUserAuthenticated","unsubscribe","onAuthStateChanged","onCheckUserSession","signOutUser","signOut","onSignOutUserStart","signUpUser","_ref2","confirmPassword","createUserWithEmailAndPassword","console","log","onSignUpUserStart","resetPassword","_ref3","onResetPasswordStart","googleSignIn","signInWithPopup","onGoogleSignInStart","userSagas","all","sagaMiddleware","createSagaMiddle","middlewares","thunk","logger","store","createStore","composeWithDevTools","applyMiddleware","run","persistor","persistStore","AuthWrapper","headline","children","React","createElement","className","FormInput","handleChange","label","otherProps","_objectWithoutProperties","_excluded","Object","assign","onChange","Button","mapState","EmailPassword","props","dispatch","useDispatch","history","useHistory","useSelector","setEmail","useState","errors","setErrors","useEffect","push","Array","isArray","configAuthWrapper","map","e","index","onSubmit","preventDefault","name","value","placeholder","target","Link","to","studioheader","class","studio","Fragment","role","StudioHeader","ChatMessage","text","photoURL","message","messageClass","currentUserUid","finalPhotoURL","substring","toUpperCase","src","alt","Chat","dummy","useRef","messagesRef","collection","query","orderBy","limit","messages","useCollectionData","idField","formValue","setFormValue","setCurrentUser","msg","ref","error","add","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","disabled","Navbar","location","useLocation","activeMenu","setActiveMenu","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","defaultProps","sidebar","data-feather","feed","Sidebar","carousel","data-ride","data-slide-to","data-slide","aria-hidden","marketing","width","height","footer","bgColor","useColorModeValue","cardBg","textColor","Box","minH","display","alignItems","justifyContent","bg","p","rounded","shadow","borderWidth","borderColor","w","maxW","VStack","spacing","align","textAlign","mb","Heading","as","size","color","Text","SignIn","setPassword","showPassword","setShowPassword","resetForm","FormControl","isRequired","FormLabel","Input","focusBorderColor","FormHelperText","InputGroup","InputRightElement","h","fontWeight","colorScheme","mt","leftIcon","FaGoogle","handleGoogleSignIn","HStack","justify","SignUpModal","onClose","stopPropagation","Signup","Home","isModalOpen","setIsModalOpen","Carousel","Marketing","Footer","handleCloseModal","Login","Center","setDisplayName","setConfirmPassword","reset","event","Registration","App","Switch","Route","path","render","PasswordReset","SignUp","exact","Studio","Feed","Boolean","window","hostname","match","ReactDOM","StrictMode","Provider","HashRouter","PersistGate","ChakraProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4eAciBA,MAdC,CACdC,oBAAqB,sBACrBC,gBAAiB,kBACjBC,mBAAoB,qBACpBC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,qBAAsB,uBACtBC,WAAY,aACZC,iBAAkB,oBCTtB,MAAMC,EAAgB,CACpBC,YAAa,KACbC,sBAAsB,EACtBC,QAAS,IAgCIC,MA7BK,WAAoC,IAAnCC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGN,EAAeS,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAOC,MACb,KAAKtB,EAAUE,gBACb,OAAAqB,wBAAA,GACKN,GAAK,IACRJ,YAAaQ,EAAOG,QACpBT,QAAS,KAEb,KAAKf,EAAUQ,uBACb,OAAAe,wBAAA,GACKN,GAAK,IACRH,qBAAsBO,EAAOG,UAEjC,KAAKxB,EAAUU,WACb,OAAAa,wBAAA,GACKN,GAAK,IACRF,QAASM,EAAOG,UAEpB,KAAKxB,EAAUW,iBACf,KAAKX,EAAUK,sBACb,OAAAkB,wBAAA,GACKN,GACAL,GAEP,QACE,OAAOK,IC1BN,MAAMQ,EAAcC,0BAAgB,CACzCC,KAAMX,IAGFY,EAAgB,CACpBC,IAAK,OACLC,YACAC,UAAW,CAAC,aAGCC,kBAAeJ,EAAeH,G,qCCX7CQ,IAASC,cCNqB,CAC1BC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBDAZ,MAAMC,EAAOV,IAASU,OAChBC,EAAYX,IAASW,YAErBC,EAAiB,IAAIZ,IAASU,KAAKG,mBASnCC,EAAoBC,UAAyC,IAAlC,SAAEC,EAAQ,eAAEC,GAAgBC,EAClE,IAAKF,EAAU,OACf,MAAM,IAAEG,GAAQH,EAEVI,EAAUT,EAAUU,IAAI,SAADC,OAAUH,IAGvC,WAFuBC,EAAQG,OAEjBC,OAAQ,CACpB,MAAM,YAAEC,EAAW,MAAEC,GAAUV,EACzBW,EAAY,IAAIC,KAChBC,EAAY,CAAC,QAEnB,UACQT,EAAQU,IAAGxC,YAAC,CAChBmC,cACAC,QACAK,YAAaJ,EACbE,aACGZ,IAEL,MAAMe,KAKV,OAAOZ,GEtCIa,EAAgBvC,IAAI,CAC/BL,KAAMtB,EAAUE,gBAChBsB,QAASG,IAoBEwC,EAAYF,IAAG,CAC1B3C,KAAMtB,EAAUU,WAChBc,QAASyC,IC5BEG,EAA0BT,IACrC,MAAMU,EAAS,CACbC,IAAK,+BAGP,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAC3B9B,EAAK+B,uBAAuBf,EAAOU,GAChCM,KAAK,KACJH,MAEDI,MAAM,KAELH,EADY,CAAC,4CCPd,SAAUI,EAAwBlD,GAA4B,IAAtBuB,EAAchC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC9D,IACE,MAAMmC,QAAgByB,YAAK/B,EAAmB,CAAEE,SAAUtB,EAAMuB,mBAC1D6B,QAAiB1B,EAAQG,YACzBwB,YACJd,EAAa3C,YAAC,CACZ0D,GAAIF,EAASE,IACVF,EAASG,UAIhB,MAAOjB,KAKJ,SAAUkB,EAAWhC,GAAoC,IAAjC3B,SAAS,MAAEmC,EAAK,SAAEyB,IAAYjC,EAC3D,IACE,MAAM,KAAExB,SAAegB,EAAK0C,2BAA2B1B,EAAOyB,SACxDP,EAAwBlD,GAE9B,MAAOsC,KAKJ,SAAUqB,UACTC,YAAWvF,EAAUC,oBAAqBkF,GAG3C,SAAUK,IACf,IACE,MAAMvC,QJUD,IAAIsB,QAAQ,CAACC,EAASC,KAC3B,MAAMgB,EAAc9C,EAAK+C,mBAAmBzC,IAC1CwC,IACAjB,EAAQvB,IACPwB,KIbH,IAAKxB,EAAU,aACT4B,EAAwB5B,GAE9B,MAAOgB,KAKJ,SAAU0B,UACTJ,YAAWvF,EAAUG,mBAAoBqF,GAG1C,SAAUI,IACf,UACQjD,EAAKkD,gBACLb,YFnCwB,CAChC1D,KAAMtB,EAAUK,wBEsCd,MAAO4D,KAKJ,SAAU6B,UACTP,YAAWvF,EAAUI,oBAAqBwF,GAG3C,SAAUG,EAAUC,GAKrB,IALwBxE,SAAS,YACrCkC,EAAW,MACXC,EAAK,SACLyB,EAAQ,gBACRa,IACCD,EAED,GAAIZ,IAAaa,EAQjB,IACE,MAAM,KAAEtE,SAAegB,EAAKuD,+BAA+BvC,EAAOyB,GAC5DlC,EAAiB,CAAEQ,qBACnBmB,EAAwBlD,EAAMuB,GAEpC,MAAOe,GACPkC,QAAQC,IAAInC,OAdd,CACE,MAAMA,EAAM,CAAC,8BACPe,YACJb,EAAUF,KAgBT,SAAUoC,UACTd,YAAWvF,EAAUM,mBAAoByF,GAG1C,SAAUO,EAAaC,GAAyB,IAAtB/E,SAAS,MAAEmC,IAAQ4C,EAClD,UACQzB,YAAKV,EAAwBT,SAC7BqB,YF9D0B,CAClC1D,KAAMtB,EAAUQ,uBAChBgB,SAAS,IEgEP,MAAOyC,SACDe,YACJb,EAAUF,KAKT,SAAUuC,UACTjB,YAAWvF,EAAUO,qBAAsB+F,GAG5C,SAAUG,IACf,IACE,MAAM,KAAE9E,SAAegB,EAAK+D,gBAAgB7D,SACtCgC,EAAwBlD,GAE9B,MAAOsC,KAKJ,SAAU0C,UACTpB,YAAWvF,EAAUS,qBAAsBgG,GAIpC,SAAUG,UACjBC,YAAI,CACR/B,YAAKQ,GACLR,YAAKa,GACLb,YAAKgB,GACLhB,YAAKuB,GACLvB,YAAK0B,GACL1B,YAAK6B,KChIT,MAAMG,EAAiBC,cACVC,EAAc,CAACC,IAAOH,EAAgBI,KAEtCC,EAAQC,sBAAY3F,EAAa4F,8BAAoBC,6BAAmBN,KACrFF,EAAeS,KCTA,kBACPV,YAAI,CACR/B,YAAK8B,QDSF,MAAMY,EAAYC,YAAaN,GAEvB,I,SEFEO,OAdGvE,IAA6B,IAA5B,SAAEwE,EAAQ,SAAEC,GAAUzE,EACvC,OACE0E,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,OAAKC,UAAU,QACZJ,GAAYE,IAAAC,cAAA,UAAKH,GAElBE,IAAAC,cAAA,OAAKC,UAAU,YACZH,GAAYA,M,2CCGVI,OAVG7E,IAA6C,IAA5C,aAAE8E,EAAY,MAAEC,GAAsB/E,EAAZgF,EAAUC,aAAAjF,EAAAkF,IACrD,OACER,IAAAC,cAAA,OAAKC,UAAU,WACZG,GAASL,IAAAC,cAAA,aAAQI,GAElBL,IAAAC,cAAA,QAAAQ,OAAAC,OAAA,CAAOR,UAAU,YAAYS,SAAUP,GAAkBE,M,sBCIhDM,OARAtF,IAAkC,IAAjC,SAAEyE,GAAyBzE,EAAZgF,EAAUC,aAAAjF,EAAAkF,IACvC,OACER,IAAAC,cAAA,SAAAQ,OAAAC,OAAA,CAAQR,UAAU,OAAUI,GACzBP,ICMP,MAAMc,GAAWvF,IAAA,IAAC,KAAExB,GAAMwB,EAAA,MAAM,CAC9BrC,qBAAsBa,EAAKb,qBAC3BC,QAASY,EAAKZ,UAiED4H,OA9DQC,IACrB,MAAMC,EAAWC,cACXC,EAAUC,gBACV,qBAAElI,EAAoB,QAAEC,GAAYkI,YAAYP,KAC/C/E,EAAOuF,GAAYC,mBAAS,KAC5BC,EAAQC,GAAaF,mBAAS,IAErCG,oBAAU,KACJxI,IACF+H,ERkBwB,CAC5BvH,KAAMtB,EAAUW,mBQlBZoI,EAAQQ,KAAK,aAEd,CAACzI,IAEJwI,oBAAU,KACJE,MAAMC,QAAQ1I,IAAYA,EAAQI,OAAS,GAC7CkI,EAAUtI,IAEX,CAACA,IAEJ,MAKM2I,EAAoB,CACxB/B,SAAU,kBAGZ,OACEE,IAAAC,cAACJ,GAAgBgC,EACf7B,IAAAC,cAAA,OAAKC,UAAU,YACZqB,EAAOjI,OAAS,GACf0G,IAAAC,cAAA,UACG,IACAsB,EAAOO,IAAI,CAACC,EAAGC,IACPhC,IAAAC,cAAA,MAAIjG,IAAKgI,GAAO,IAAED,EAAE,MACzB,KAIR/B,IAAAC,cAAA,QAAMgC,SArBUF,IACpBA,EAAEG,iBACFlB,ERL6C,CAC/CvH,KAAMtB,EAAUO,qBAChBiB,QQG8B,CAAEmC,aAoBxBkE,IAAAC,cAACE,GAAS,CACR1G,KAAK,QACL0I,KAAK,QACLC,MAAOtG,EACPuG,YAAY,QACZjC,aAAe2B,GAAMV,EAASU,EAAEO,OAAOF,SAGzCpC,IAAAC,cAACW,GAAM,CAACnH,KAAK,UAAS,oBAGxBuG,IAAAC,cAAA,OAAKC,UAAU,SACbF,IAAAC,cAACsC,IAAI,CAACC,GAAG,WAAU,UAAa,IAAC,MAAQ,IACzCxC,IAAAC,cAACsC,IAAI,CAACC,GAAG,WAAU,aAAiB,MAEjC,M,OC3DEC,OAZf,WACE,OACEzC,IAAAC,cAAA,WAASyC,MAAM,+BACf1C,IAAAC,cAAA,OAAKyC,MAAM,gB,OCSAC,OAXf,WACE,OACE3C,IAAAC,cAAAD,IAAA4C,SAAA,KACA5C,IAAAC,cAAA,QAAM4C,KAAK,OAAOH,MAAM,yCACxB1C,IAAAC,cAAC6C,GAAY,S,0BCAjB,MAAMhI,GAAOV,IAASU,OAChBC,GAAYX,IAASW,YAkE3B,SAASgI,GAAYhC,GACjB,MAAM,KAAEiC,EAAI,IAAEzH,EAAG,SAAE0H,GAAalC,EAAMmC,QAIhCC,EAAe5H,IAFEwF,EAAMqC,eAEiB,aAAe,gBAEvDC,EAAgBJ,GAAQ,iDAAAvH,OAAqDH,EAAMA,EAAI+H,UAAU,EAAG,GAAGC,cAAgB,KAE7H,OACIvD,IAAAC,cAAA,OAAKC,UAAS,gBAAAxE,OAAkByH,IAC5BnD,IAAAC,cAAA,OAAKC,UAAU,mBACO,kBAAjBiD,GACGnD,IAAAC,cAAA,OAAKuD,IAAKH,EAAeI,IAAI,cAAcvD,UAAU,gBAEzDF,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,SAAI+C,IAEU,eAAjBG,GACGnD,IAAAC,cAAA,OAAKuD,IAAKH,EAAeI,IAAI,cAAcvD,UAAU,kBAO1DwD,OA1Ff,WACI,MAAMC,EAAQC,mBACRC,EAAc9I,GAAU+I,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,KAE9CC,GAAYC,aAAkBJ,EAAO,CAAEK,QAAS,QAChDC,EAAWC,GAAgBhD,mBAAS,KAGpCtI,EAAauL,GAAkBjD,mBAASxG,GAAK9B,aAmCpD,OAjCAyI,oBAAU,KAEN,MAAM7D,EAAc9C,GAAK+C,mBAAmB/D,IACxCyK,EAAezK,KAInB,MAAO,IAAM8D,KACd,IA0BCoC,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,QAAMC,UAAU,iBACXgE,GAAYA,EAASpC,IAAI0C,GAAOxE,IAAAC,cAAC8C,GAAW,CAAC/I,IAAKwK,EAAIpH,GAAI8F,QAASsB,EAAKpB,eAA2B,OAAXpK,QAAW,IAAXA,OAAW,EAAXA,EAAauC,OACtGyE,IAAAC,cAAA,QAAMwE,IAAKd,KAEf3D,IAAAC,cAAA,QAAMC,UAAU,aAAa+B,SA5BjB9G,UAIhB,GAHA4G,EAAEG,kBAGGlJ,EAED,YADAsF,QAAQoG,MAAM,6CAIlB,MAAM,IAAEnJ,EAAG,SAAE0H,GAAajK,QAEpB6K,EAAYc,IAAI,CAClB3B,KAAMqB,EACNO,UAAWxK,IAASW,UAAU8J,WAAWC,kBACzCvJ,MACA0H,aAGJqB,EAAa,IACbX,EAAMoB,QAAQC,eAAe,CAAEC,SAAU,aAUjCjF,IAAAC,cAAA,SACImC,MAAOiC,EACP1D,SAAWoB,GAAMuC,EAAavC,EAAEO,OAAOF,OACvCC,YAAY,uBAEhBrC,IAAAC,cAAA,UAAQxG,KAAK,SAASyL,UAAWb,GAAW,yB,OC7D5D,MAAMxD,GAAYzH,IAAK,CACrBJ,YAAaI,EAAMU,KAAKd,cAIpBmM,GAAUpE,IACd,MAAMqE,EAAWC,gBACVC,EAAYC,GAAiBjE,oBAAS,GACvCN,EAAWC,eACX,YAAEjI,GAAeoI,YAAYP,IAE7B7C,EAAUA,KACdgD,EZF4B,CAC9BvH,KAAMtB,EAAUI,uBYQhB,OAJAkJ,oBAAU,KACR8D,GAAc,IACb,CAACH,IAGFpF,IAAAC,cAAAD,IAAA4C,SAAA,KACE5C,IAAAC,cAAA,OAAKyC,MAAM,mEACT1C,IAAAC,cAAA,KAAGyC,MAAM,2CAA2C8C,KAAK,KAAI,SACpD,KACJ,IACLxF,IAAAC,cAAA,UACEyC,MAAM,uDACNjJ,KAAK,SACLgM,cAAY,WACZC,cAAY,eACZC,gBAAc,cACdC,gBAAc,QACdC,aAAW,qBAEX7F,IAAAC,cAAA,QAAMyC,MAAM,uBAAsB,KAAS,KACnC,IACT1J,GACCgH,IAAAC,cAAA,MAAIyC,MAAM,mBACR1C,IAAAC,cAAA,MAAIyC,MAAM,wBACR1C,IAAAC,cAAA,KAAGyC,MAAM,WAAWF,GAAG,UAAUsD,QAASA,IAAM9H,KAAW,WAChD,KACN,KACD,IACNgC,IAAAC,cAAA,MAAIyC,MAAM,wBACR1C,IAAAC,cAACsC,IAAI,CAACC,GAAG,SAAQ,OACV,KACC,KACJ,MAGRxJ,GAAe,CACfgH,IAAAC,cAAA,MAAIyC,MAAM,mBACR1C,IAAAC,cAAA,MAAIyC,MAAM,wBACR1C,IAAAC,cAACsC,IAAI,CAACC,GAAG,WAAU,SACXxC,IAAAC,cAAA,KAAGyC,MAAM,sBAAqB,KAAM,KACpC,KACJ,MAEP,KACE,MAKbyC,GAAOY,aAAe,CACpB/M,YAAa,MAGAmM,UCvCAa,OAhCf,WACI,OACIhG,IAAAC,cAAA,OAAKyC,MAAM,mBACX1C,IAAAC,cAAA,OAAKyC,MAAM,OACT1C,IAAAC,cAAA,OACE7C,GAAG,cACHsF,MAAM,0DAEN1C,IAAAC,cAAA,OAAKyC,MAAM,uBACT1C,IAAAC,cAAA,MAAIyC,MAAM,mBAER1C,IAAAC,cAAA,MAAIyC,MAAM,YACR1C,IAAAC,cAAA,KAAGyC,MAAM,WAAW8C,KAAK,SACvBxF,IAAAC,cAAA,QAAMgG,eAAa,SAAc,SAIrCjG,IAAAC,cAAA,MAAIyC,MAAM,YACR1C,IAAAC,cAAA,KAAGyC,MAAM,WAAW8C,KAAK,WACvBxF,IAAAC,cAAA,QAAMgG,eAAa,WAAgB,e,OCJxCC,OAZDnF,GAEVf,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAACkF,GAAM,MACPnF,IAAAC,cAACkG,GAAO,MACRnG,IAAAC,cAAA,QAAMC,UAAU,gBACdF,IAAAC,cAACyD,GAAI,Q,OCwDE0C,OAjEf,WACE,OACEpG,IAAAC,cAAA,OAAK7C,GAAG,aAAasF,MAAM,iBAAiB2D,YAAU,YACpDrG,IAAAC,cAAA,MAAIyC,MAAM,uBACR1C,IAAAC,cAAA,MAAIyF,cAAY,cAAcY,gBAAc,IAAI5D,MAAM,WACtD1C,IAAAC,cAAA,MAAIyF,cAAY,cAAcY,gBAAc,MAC5CtG,IAAAC,cAAA,MAAIyF,cAAY,cAAcY,gBAAc,OAE9CtG,IAAAC,cAAA,OAAKyC,MAAM,kBACT1C,IAAAC,cAAA,OAAKyC,MAAM,wBACT1C,IAAAC,cAAA,OAAKuD,IAAI,0KAETxD,IAAAC,cAAA,OAAKyC,MAAM,aACT1C,IAAAC,cAAA,OAAKyC,MAAM,8BACT1C,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,aAMND,IAAAC,cAAA,OAAKyC,MAAM,iBACT1C,IAAAC,cAAA,OAAKuD,IAAI,4KACTxD,IAAAC,cAAA,OAAKyC,MAAM,aACT1C,IAAAC,cAAA,OAAKyC,MAAM,oBACT1C,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,aAMND,IAAAC,cAAA,OAAKyC,MAAM,iBACT1C,IAAAC,cAAA,OAAKuD,IAAI,6KACTxD,IAAAC,cAAA,OAAKyC,MAAM,aACT1C,IAAAC,cAAA,OAAKyC,MAAM,+BACT1C,IAAAC,cAAA,WACAD,IAAAC,cAAA,cAORD,IAAAC,cAAA,KACEyC,MAAM,wBACN8C,KAAK,cACL3C,KAAK,SACL0D,aAAW,QAEXvG,IAAAC,cAAA,QAAMyC,MAAM,6BAA6B8D,cAAY,SACrDxG,IAAAC,cAAA,QAAMyC,MAAM,WAAU,aAExB1C,IAAAC,cAAA,KACEyC,MAAM,wBACN8C,KAAK,cACL3C,KAAK,SACL0D,aAAW,QAEXvG,IAAAC,cAAA,QAAMyC,MAAM,6BAA6B8D,cAAY,SACrDxG,IAAAC,cAAA,QAAMyC,MAAM,WAAU,W,OCgCf+D,OA5Ff,WACE,OACEzG,IAAAC,cAAA,OAAKyC,MAAM,uBACT1C,IAAAC,cAAA,OAAKyC,MAAM,OACT1C,IAAAC,cAAA,OAAKyC,MAAM,YACT1C,IAAAC,cAAA,OACEyC,MAAM,oCACNgE,MAAM,MACNC,OAAO,MACPnD,IAAI,sKAGNxD,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,WAKFD,IAAAC,cAAA,OAAKyC,MAAM,YACT1C,IAAAC,cAAA,OACEyC,MAAM,oCACNgE,MAAM,MACNC,OAAO,MACPnD,IAAI,uLAGNxD,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,YAMJD,IAAAC,cAAA,MAAIyC,MAAM,uBAEV1C,IAAAC,cAAA,OAAKyC,MAAM,kBACT1C,IAAAC,cAAA,OAAKyC,MAAM,YACT1C,IAAAC,cAAA,MAAIyC,MAAM,sBAAqB,UACrB,IACR1C,IAAAC,cAAA,QAAMyC,MAAM,cAAa,2BAI3B1C,IAAAC,cAAA,KAAGyC,MAAM,QAAO,mNAOlB1C,IAAAC,cAAA,OAAKyC,MAAM,YACT1C,IAAAC,cAAA,OACEyC,MAAM,8EACNgE,MAAM,MACNC,OAAO,MACPnD,IAAI,oLAKVxD,IAAAC,cAAA,MAAIyC,MAAM,uBAEV1C,IAAAC,cAAA,OAAKyC,MAAM,kBACT1C,IAAAC,cAAA,OAAKyC,MAAM,uBACT1C,IAAAC,cAAA,MAAIyC,MAAM,sBAAqB,iBACd,IACf1C,IAAAC,cAAA,QAAMyC,MAAM,cAAa,YAI3B1C,IAAAC,cAAA,KAAGyC,MAAM,QAAO,mNAOlB1C,IAAAC,cAAA,OAAKyC,MAAM,uBACT1C,IAAAC,cAAA,OACEyC,MAAM,8EACNgE,MAAM,MACNC,OAAO,MACPnD,IAAI,wLAKVxD,IAAAC,cAAA,MAAIyC,MAAM,yBC7EDkE,OAVf,WACI,OAEJ5G,IAAAC,cAAA,UAAQyC,MAAM,aACV1C,IAAAC,cAAA,KAAGyC,MAAM,eAAc1C,IAAAC,cAAA,KAAGuF,KAAK,KAAI,gBACnCxF,IAAAC,cAAA,SAAG,0BAA6BD,IAAAC,cAAA,KAAGuF,KAAK,KAAI,WAAW,SAAUxF,IAAAC,cAAA,KAAGuF,KAAK,KAAI,Y,8HCiBjF,MAAM3F,GAAcvE,IAA6B,IAA5B,SAAEwE,EAAQ,SAAEC,GAAUzE,EACzC,MAAMuL,EAAUC,6BAAkB,UAAW,YACvCC,EAASD,6BAAkB,QAAS,YACpCE,EAAYF,6BAAkB,WAAY,YAEhD,OACE9G,IAAAC,cAACgH,KAAG,CACFC,KAAK,QACLC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,GAAIT,EACJU,EAAG,GAEHvH,IAAAC,cAACgH,KAAG,CACFK,GAAIP,EACJQ,EAAG,EACHC,QAAQ,MACRC,OAAO,KACPC,YAAY,MACZC,YAAab,6BAAkB,WAAY,YAC3Cc,EAAE,OACFC,KAAK,MAEL7H,IAAAC,cAAC6H,KAAM,CAACC,QAAS,EAAGC,MAAM,UAAUC,UAAU,SAASC,GAAI,GACzDlI,IAAAC,cAACkI,KAAO,CAACC,GAAG,KAAKC,KAAK,KAAKC,MAAM,YAC9BxI,GAEHE,IAAAC,cAACsI,KAAI,CAACD,MAAOtB,GAAW,wCAIzBjH,KAOHc,GAAW1C,IAAA,IAAC,KAAErE,GAAMqE,EAAA,MAAM,CAC9BnF,YAAac,EAAKd,cAiILwP,OA9HAA,KAEb,MAAMxH,EAAWC,cACXC,EAAUC,gBACV,YAAEnI,GAAgBoI,YAAYP,KAG7B/E,EAAOuF,GAAYC,mBAAS,KAC5B/D,EAAUkL,GAAenH,mBAAS,KAClCoH,EAAcC,GAAmBrH,oBAAS,GAGjDG,oBAAU,KACJzI,IACF4P,IACA1H,EAAQQ,KAAK,OAEd,CAAC1I,EAAakI,IAGjB,MAAM0H,EAAYA,KAChBvH,EAAS,IACToH,EAAY,KAcR5G,EAAoB,CACxB/B,SAAU,gBAIZ,OACEE,IAAAC,cAACJ,GAAgBgC,EACf7B,IAAAC,cAAA,QAAMgC,SAjBYF,IACpBA,EAAEG,iBACFlB,ElB9F2C,CAC7CvH,KAAMtB,EAAUC,oBAChBuB,QkB4F4B,CAAEmC,QAAOyB,gBAgB/ByC,IAAAC,cAAC6H,KAAM,CAACC,QAAS,EAAGC,MAAM,WAExBhI,IAAAC,cAAC4I,KAAW,CAACzL,GAAG,QAAQ0L,YAAU,GAChC9I,IAAAC,cAAC8I,KAAS,KAAC,iBACX/I,IAAAC,cAAC+I,KAAK,CACJvP,KAAK,QACL2I,MAAOtG,EACP6E,SAAWoB,GAAMV,EAASU,EAAEO,OAAOF,OACnCC,YAAY,kBACZsF,YAAY,WACZsB,iBAAiB,aAEnBjJ,IAAAC,cAACiJ,KAAc,KAAC,kCAIlBlJ,IAAAC,cAAC4I,KAAW,CAACzL,GAAG,WAAW0L,YAAU,GACnC9I,IAAAC,cAAC8I,KAAS,KAAC,YACX/I,IAAAC,cAACkJ,KAAU,KACTnJ,IAAAC,cAAC+I,KAAK,CACJvP,KAAMiP,EAAe,OAAS,WAC9BtG,MAAO7E,EACPoD,SAAWoB,GAAM0G,EAAY1G,EAAEO,OAAOF,OACtCC,YAAY,mDACZsF,YAAY,WACZsB,iBAAiB,aAEnBjJ,IAAAC,cAACmJ,KAAiB,CAAC1C,MAAM,UACvB1G,IAAAC,cAACW,KAAM,CACLyI,EAAE,UACFhB,KAAK,KACLvC,QAASA,IAAM6C,GAAiBD,IAE/BA,EAAe,OAAS,UAK/B1I,IAAAC,cAACiJ,KAAc,KACblJ,IAAAC,cAACsC,IAAI,CAACC,GAAG,kBACPxC,IAAAC,cAACsI,KAAI,CAACD,MAAM,WAAWgB,WAAW,UAAS,uBAMjDtJ,IAAAC,cAACW,KAAM,CACLnH,KAAK,SACL8P,YAAY,OACZlB,KAAK,KACLb,QAAQ,KACRd,MAAM,OACN8C,GAAI,GACL,WAKDxJ,IAAAC,cAACW,KAAM,CACL6I,SAAUzJ,IAAAC,cAACyJ,KAAQ,MACnBH,YAAY,OACZlB,KAAK,KACLb,QAAQ,KACRd,MAAM,OACNZ,QA5EiB6D,KACzB3I,ElBrD6B,CAC/BvH,KAAMtB,EAAUS,yBkBgIP,uBAKDoH,IAAAC,cAAC2J,KAAM,CAAC7B,QAAS,EAAG8B,QAAQ,SAASL,GAAI,GACvCxJ,IAAAC,cAACsI,KAAI,KAAC,0BACNvI,IAAAC,cAACsC,IAAI,CAACC,GAAG,WACPxC,IAAAC,cAACsI,KAAI,CAACD,MAAM,WAAWgB,WAAW,QAAO,kBCxKxCQ,OAbKxO,IAAkB,IAAjB,QAAEyO,GAASzO,EAC9B,OACE0E,IAAAC,cAAA,OAAKC,UAAU,gBAAgB4F,QAASiE,GACtC/J,IAAAC,cAAA,OAAKC,UAAU,gBAAgB4F,QAAS/D,GAAKA,EAAEiI,mBAC7ChK,IAAAC,cAAA,UAAQC,UAAU,cAAc4F,QAASiE,GAAS,QAGlD/J,IAAAC,cAACgK,GAAM,S,OCDf,MAAMpJ,GAAWvF,IAAA,IAAC,KAAExB,GAAMwB,EAAA,MAAM,CAC9BtC,YAAac,EAAKd,cA6BLkR,OA1BDnJ,IACZ,MAAM,YAAE/H,GAAgBoI,YAAYP,KAC7BsJ,EAAaC,GAAkB9I,oBAAS,GAE/CG,oBAAU,KAEHzI,GACHoR,GAAe,IAEhB,CAACpR,IAMJ,OACEgH,IAAAC,cAAAD,IAAA4C,SAAA,KACE5C,IAAAC,cAACkF,GAAWpE,GACZf,IAAAC,cAACoK,GAAQ,MACTrK,IAAAC,cAACqK,GAAS,MACVtK,IAAAC,cAACsK,GAAM,MACNJ,GAAenK,IAAAC,cAAC6J,GAAW,CAACC,QAVRS,KACvBJ,GAAe,Q,UCfJK,OAPA1J,GAEXf,IAAAC,cAACyK,KAAM,KACT1K,IAAAC,cAACuI,GAAM,OCkBT,MAAM3I,GAAcvE,IAA6B,IAA5B,SAAEwE,EAAQ,SAAEC,GAAUzE,EACzC,MAAMuL,EAAUC,6BAAkB,UAAW,YACvCC,EAASD,6BAAkB,QAAS,YACpCE,EAAYF,6BAAkB,WAAY,YAEhD,OACE9G,IAAAC,cAACgH,KAAG,CACFC,KAAK,QACLC,QAAQ,OACRC,WAAW,SACXC,eAAe,SACfC,GAAIT,EACJU,EAAG,GAEHvH,IAAAC,cAACgH,KAAG,CACFK,GAAIP,EACJQ,EAAG,EACHC,QAAQ,MACRC,OAAO,KACPC,YAAY,MACZC,YAAab,6BAAkB,WAAY,YAC3Cc,EAAE,OACFC,KAAK,MAEL7H,IAAAC,cAAC6H,KAAM,CAACC,QAAS,EAAGC,MAAM,UAAUC,UAAU,SAASC,GAAI,GACzDlI,IAAAC,cAACkI,KAAO,CAACC,GAAG,KAAKC,KAAK,KAAKC,MAAM,YAC9BxI,GAEHE,IAAAC,cAACsI,KAAI,CAACD,MAAOtB,GAAW,uCAIzBjH,KAMHc,GAAW1C,IAAA,IAAC,KAAErE,GAAMqE,EAAA,MAAM,CAC9BnF,YAAac,EAAKd,YAClBE,QAASY,EAAKZ,UA2ID+Q,OAxIAA,KACb,MAAMjJ,EAAWC,cACXC,EAAUC,gBACV,YAAEnI,EAAW,QAAEE,GAAYkI,YAAYP,KAEtChF,EAAa8O,GAAkBrJ,mBAAS,KACxCxF,EAAOuF,GAAYC,mBAAS,KAC5B/D,EAAUkL,GAAenH,mBAAS,KAClClD,EAAiBwM,GAAsBtJ,mBAAS,KAChDC,EAAQC,GAAaF,mBAAS,KAC9BoH,EAAcC,GAAmBrH,oBAAS,GAEjDG,oBAAU,KACJzI,IACF6R,IACA3J,EAAQQ,KAAK,OAEd,CAAC1I,EAAakI,IAEjBO,oBAAU,KACJE,MAAMC,QAAQ1I,IAAYA,EAAQI,OAAS,GAC7CkI,EAAUtI,IAEX,CAACA,IAEJ,MAAM2R,EAAQA,KACZF,EAAe,IACftJ,EAAS,IACToH,EAAY,IACZmC,EAAmB,IACnBpJ,EAAU,KAeNK,EAAoB,CACxB/B,SAAU,kBAGZ,OACEE,IAAAC,cAACJ,GAAgBgC,EACf7B,IAAAC,cAAA,QAAMgC,SAlBgB6I,IACxBA,EAAM5I,iBACNlB,EtB/E0C,CAC5CvH,KAAMtB,EAAUM,mBAChBkB,QsB8EoB,CACdkC,cACAC,QACAyB,WACAa,uBAYA4B,IAAAC,cAAC6H,KAAM,CAACC,QAAS,EAAGC,MAAM,WACvBzG,EAAOjI,OAAS,GACf0G,IAAAC,cAACgH,KAAG,CAACqB,MAAM,UAAUf,EAAG,EAAGC,QAAQ,KAAKE,YAAY,MAAMC,YAAY,WACnEpG,EAAOO,IAAI,CAAC1F,EAAK4F,IAChBhC,IAAAC,cAACsI,KAAI,CAACvO,IAAKgI,GAAQ5F,KAKzB4D,IAAAC,cAAC4I,KAAW,CAACzL,GAAG,cAAc0L,YAAU,GACtC9I,IAAAC,cAAC8I,KAAS,KAAC,aACX/I,IAAAC,cAAC+I,KAAK,CACJvP,KAAK,OACL2I,MAAOvG,EACP8E,SAAWoB,GAAM4I,EAAe5I,EAAEO,OAAOF,OACzCC,YAAY,WACZsF,YAAY,WACZsB,iBAAiB,cAIrBjJ,IAAAC,cAAC4I,KAAW,CAACzL,GAAG,QAAQ0L,YAAU,GAChC9I,IAAAC,cAAC8I,KAAS,KAAC,iBACX/I,IAAAC,cAAC+I,KAAK,CACJvP,KAAK,QACL2I,MAAOtG,EACP6E,SAAWoB,GAAMV,EAASU,EAAEO,OAAOF,OACnCC,YAAY,kBACZsF,YAAY,WACZsB,iBAAiB,cAIrBjJ,IAAAC,cAAC4I,KAAW,CAACzL,GAAG,WAAW0L,YAAU,GACnC9I,IAAAC,cAAC8I,KAAS,KAAC,YACX/I,IAAAC,cAACkJ,KAAU,KACTnJ,IAAAC,cAAC+I,KAAK,CACJvP,KAAMiP,EAAe,OAAS,WAC9BtG,MAAO7E,EACPoD,SAAWoB,GAAM0G,EAAY1G,EAAEO,OAAOF,OACtCC,YAAY,mDACZsF,YAAY,WACZsB,iBAAiB,aAEnBjJ,IAAAC,cAACmJ,KAAiB,CAAC1C,MAAM,UACvB1G,IAAAC,cAACW,KAAM,CACLyI,EAAE,UACFhB,KAAK,KACLvC,QAASA,IAAM6C,GAAiBD,IAE/BA,EAAe,OAAS,WAMjC1I,IAAAC,cAAC4I,KAAW,CAACzL,GAAG,kBAAkB0L,YAAU,GAC1C9I,IAAAC,cAAC8I,KAAS,KAAC,oBACX/I,IAAAC,cAAC+I,KAAK,CACJvP,KAAMiP,EAAe,OAAS,WAC9BtG,MAAOhE,EACPuC,SAAWoB,GAAM6I,EAAmB7I,EAAEO,OAAOF,OAC7CC,YAAY,mDACZsF,YAAY,WACZsB,iBAAiB,cAIrBjJ,IAAAC,cAACW,KAAM,CAACnH,KAAK,SAAS8P,YAAY,OAAOlB,KAAK,KAAKb,QAAQ,KAAKd,MAAM,OAAO8C,GAAI,GAAG,cAMxFxJ,IAAAC,cAAC2J,KAAM,CAAC7B,QAAS,EAAG8B,QAAQ,SAASL,GAAI,GACvCxJ,IAAAC,cAACsI,KAAI,KAAC,4BACNvI,IAAAC,cAACsC,IAAI,CAACC,GAAG,WACPxC,IAAAC,cAACsI,KAAI,CAACD,MAAM,WAAWgB,WAAW,QAAO,cC9LpCyB,OAJOhK,GACXf,IAAAC,cAACgK,GAAM,MCqCHe,OAvBFjK,IACX,MAAMC,EAAWC,cAKjB,OAHAQ,oBAAU,KACRT,ExBV4B,CAC9BvH,KAAMtB,EAAUG,sBwBUb,IAED0H,IAAAC,cAAAD,IAAA4C,SAAA,KACE5C,IAAAC,cAACgL,KAAM,KACLjL,IAAAC,cAACiL,KAAK,CAACC,KAAK,UAAUC,OAAQA,IAAMpL,IAAAC,cAACwK,GAAK,QAC1CzK,IAAAC,cAACiL,KAAK,CAACC,KAAK,iBAAiBC,OAAQA,IAAMpL,IAAAC,cAACoL,GAAa,QACzDrL,IAAAC,cAACiL,KAAK,CAACC,KAAK,UAAUC,OAAQA,IAAMpL,IAAAC,cAACqL,GAAM,QAC3CtL,IAAAC,cAACiL,KAAK,CAACK,OAAK,EAACJ,KAAK,IAAIC,OAAQA,IAE5BpL,IAAAC,cAACiK,GAAI,QAEPlK,IAAAC,cAACiL,KAAK,CAACC,KAAK,QAAQC,OAAQA,IAAMpL,IAAAC,cAACuL,GAAM,QACzCxL,IAAAC,cAACiL,KAAK,CAACC,KAAK,QAAQC,OAAQA,IAAMpL,IAAAC,cAACwL,GAAI,WCvB3BC,QACW,cAA7BC,OAAOvG,SAASwG,UAEe,UAA7BD,OAAOvG,SAASwG,UAEhBD,OAAOvG,SAASwG,SAASC,MACvB,2D,aCRNC,IAASV,OACPpL,IAAAC,cAACD,IAAM+L,WAAU,KACf/L,IAAAC,cAAC+L,IAAQ,CAAC1M,MAAOA,GACfU,IAAAC,cAACgM,IAAU,KACTjM,IAAAC,cAACiM,IAAW,CAACvM,UAAWA,GACxBK,IAAAC,cAACkM,KAAc,KACbnM,IAAAC,cAAC+K,GAAG,QAES,KACH,KACJ,KAEdoB,SAASC,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1P,KAAK2P,IACJA,EAAaC,eAEd3P,MAAM2H,IACLpG,QAAQoG,MAAMA,EAAMxB,a","file":"static/js/main.3e3dfb3f.chunk.js","sourcesContent":["const userTypes = {\n    EMAIL_SIGN_IN_START: 'EMAIL_SIGN_IN_START',\n    SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n    CHECK_USER_SESSION: 'CHECK_USER_SESSION',\n    SIGN_OUT_USER_START: 'SIGN_OUT_USER_START',\n    SIGN_OUT_USER_SUCCESS: 'SIGN_OUT_USER_SUCCESS',\n    SIGN_UP_USER_START: 'SIGN_UP_USER_START',\n    RESET_PASSWORD_START: 'RESET_PASSWORD_START',\n    RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS',\n    GOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\n    USER_ERROR: 'USER_ERROR',\n    RESET_USER_STATE: 'RESET_USER_STATE'\n  };\n  \n  export default userTypes;","import userTypes from './user.types';\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  resetPasswordSuccess: false,\n  userErr: []\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case userTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n        userErr: []\n      }\n    case userTypes.RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        resetPasswordSuccess: action.payload\n      }\n    case userTypes.USER_ERROR:\n      return {\n        ...state,\n        userErr: action.payload\n      }\n    case userTypes.RESET_USER_STATE:\n    case userTypes.SIGN_OUT_USER_SUCCESS:\n      return {\n        ...state,\n        ...INITIAL_STATE\n      }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport userReducer from './User/user.reducer';\n\n\nexport const rootReducer = combineReducers({\n  user: userReducer,\n});\n\nconst configStorage = {\n  key: 'root',\n  storage,\n  whitelist: ['cartData']\n};\n\nexport default persistReducer(configStorage, rootReducer);","\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from './config';\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider()\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(googleProvider).then((res) => {\n    console.log(res.user)\n  }).catch((error) => {\n    console.log(error.message)\n  })\n}\n\nexport const handleUserProfile = async ({ userAuth, additionalData }) => {\n  if (!userAuth) return;\n  const { uid } = userAuth;\n\n  const userRef = firestore.doc(`users/${uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const { displayName, email } = userAuth;\n    const timestamp = new Date();\n    const userRoles = ['user'];\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdDate: timestamp,\n        userRoles,\n        ...additionalData\n      });\n    } catch(err) {\n      // console.log(err);\n    }\n  }\n\n  return userRef;\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  })\n}","export const firebaseConfig = {\n    apiKey: \"AIzaSyA0-6Hfs-mPBB5Xyl3GyZ3tPPzDfSdEhaI\",\n    authDomain: \"artscape-97160.firebaseapp.com\",\n    databaseURL: \"https://artscape-97160.firebaseio.com\",\n    projectId: \"artscape-97160\",\n    storageBucket: \"artscape-97160.appspot.com\",\n    messagingSenderId: \"706465248594\",\n    appId: \"1:706465248594:web:bfae4b511225986cdd768b\",\n    measurementId: \"G-58YLW8N1N8\"\n  };\n\n  ","import userTypes from './user.types';\n\nexport const emailSignInStart = userCredentials => ({\n  type: userTypes.EMAIL_SIGN_IN_START,\n  payload: userCredentials\n});\n\nexport const signInSuccess = user => ({\n  type: userTypes.SIGN_IN_SUCCESS,\n  payload: user\n});\n\nexport const checkUserSession = () => ({\n  type: userTypes.CHECK_USER_SESSION\n});\n\nexport const signOutUserStart = () => ({\n  type: userTypes.SIGN_OUT_USER_START\n});\n\nexport const signOutUserSuccess = () => ({\n  type: userTypes.SIGN_OUT_USER_SUCCESS\n});\n\nexport const signUpUserStart = userCredentials => ({\n  type: userTypes.SIGN_UP_USER_START,\n  payload: userCredentials\n});\n\nexport const userError = err => ({\n  type: userTypes.USER_ERROR,\n  payload: err\n});\n\nexport const resetPasswordStart = userCredentials => ({\n  type: userTypes.RESET_PASSWORD_START,\n  payload: userCredentials\n});\n\nexport const resetPasswordSuccess = () => ({\n  type: userTypes.RESET_PASSWORD_SUCCESS,\n  payload: true\n});\n\nexport const resetUserState = () => ({\n  type: userTypes.RESET_USER_STATE\n});\n\nexport const googleSignInStart = () => ({\n  type: userTypes.GOOGLE_SIGN_IN_START\n});","   \nimport { auth } from './../../Firebase/Utils';\n\nexport const handleResetPasswordAPI = (email) => {\n  const config = {\n    url: 'http://localhost:3000/login'\n  };\n\n  return new Promise((resolve, reject) => {\n    auth.sendPasswordResetEmail(email, config)\n      .then(() => {\n        resolve();\n      })\n      .catch(() => {\n        const err = ['Email not found. Please try again.'];\n        reject(err);\n      });\n  });\n};","import { takeLatest, call, all, put } from 'redux-saga/effects';\nimport { auth, handleUserProfile, getCurrentUser, googleProvider } from './../../Firebase/Utils';\nimport userTypes from './user.types';\nimport { signInSuccess, signOutUserSuccess, resetPasswordSuccess, userError } from './user.actions';\nimport { handleResetPasswordAPI } from './user.helpers';\n\n\nexport function* getSnapshotFromUserAuth(user, additionalData = {}) {\n  try {\n    const userRef = yield call(handleUserProfile, { userAuth: user, additionalData });\n    const snapshot = yield userRef.get();\n    yield put(\n      signInSuccess({\n        id: snapshot.id,\n        ...snapshot.data()\n      })\n    );\n\n  } catch (err) {\n    // console.log(err);\n  }\n}\n\nexport function* emailSignIn({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n\n  } catch (err) {\n    // console.log(err);\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n\n  } catch (err) {\n    // console.log(err);\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(userTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOutUser() {\n  try {\n    yield auth.signOut();\n    yield put(\n      signOutUserSuccess()\n    )\n\n  } catch (err) {\n    // console.log(err);\n  }\n}\n\nexport function* onSignOutUserStart() {\n  yield takeLatest(userTypes.SIGN_OUT_USER_START, signOutUser);\n}\n\nexport function* signUpUser({ payload: {\n  displayName,\n  email,\n  password,\n  confirmPassword\n} }) {\n\n  if (password !== confirmPassword) {\n    const err = ['Password Don\\'t match'];\n    yield put(\n      userError(err)\n    );\n    return;\n  }\n\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    const additionalData = { displayName };\n    yield getSnapshotFromUserAuth(user, additionalData);\n\n  } catch (err) {\n    console.log(err);\n  }\n\n}\n\nexport function* onSignUpUserStart() {\n  yield takeLatest(userTypes.SIGN_UP_USER_START, signUpUser);\n}\n\nexport function* resetPassword({ payload: { email }}) {\n  try {\n    yield call(handleResetPasswordAPI, email);\n    yield put(\n      resetPasswordSuccess()\n    );\n\n  } catch (err) {\n    yield put(\n      userError(err)\n    )\n  }\n}\n\nexport function* onResetPasswordStart() {\n  yield takeLatest(userTypes.RESET_PASSWORD_START, resetPassword);\n}\n\nexport function* googleSignIn() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n\n  } catch (err) {\n    // console.log(err);\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\n\n\nexport default function* userSagas() {\n  yield all([\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutUserStart),\n    call(onSignUpUserStart),\n    call(onResetPasswordStart),\n    call(onGoogleSignInStart),\n  ])\n}","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport createSagaMiddle from 'redux-saga';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddle();\nexport const middlewares = [thunk, sagaMiddleware, logger];\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)));\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default {\n  store,\n  persistor\n};","import { all, call } from 'redux-saga/effects';\n\nimport userSagas from './User/user.sagas';\n\n\nexport default function* rootSaga() {\n  yield all([\n    call(userSagas),\n  ])\n}","import React from 'react';\n\nconst AuthWrapper = ({ headline, children }) => {\n    return (\n      <div className=\"authWrapper\">\n        <div className=\"wrap\">\n          {headline && <h2>{headline}</h2>}\n  \n          <div className=\"children\">\n            {children && children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  export default AuthWrapper;","import React from \"react\";\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => {\n  return (\n    <div className=\"formRow\">\n      {label && <label>{label}</label>}\n\n      <input className=\"formInput\" onChange={handleChange} {...otherProps} />\n    </div>\n  );\n};\n\nexport default FormInput;\n","import React from 'react';\n\n\nconst Button = ({ children, ...otherProps }) => {\n  return (\n    <button className=\"btn\" {...otherProps}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport {\n  resetPasswordStart,\n  resetUserState,\n} from \"../../redux/User/user.actions\";\n\nimport AuthWrapper from \"./../AuthWrapper\";\nimport FormInput from \"./../forms/FormInput\";\nimport Button from \"./../forms/Button\";\n\nconst mapState = ({ user }) => ({\n  resetPasswordSuccess: user.resetPasswordSuccess,\n  userErr: user.userErr,\n});\n\nconst EmailPassword = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { resetPasswordSuccess, userErr } = useSelector(mapState);\n  const [email, setEmail] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    if (resetPasswordSuccess) {\n      dispatch(resetUserState());\n      history.push(\"/signin\");\n    }\n  }, [resetPasswordSuccess]);\n\n  useEffect(() => {\n    if (Array.isArray(userErr) && userErr.length > 0) {\n      setErrors(userErr);\n    }\n  }, [userErr]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(resetPasswordStart({ email }));\n  };\n\n  const configAuthWrapper = {\n    headline: \"Email Password\",\n  };\n\n  return (\n    <AuthWrapper {...configAuthWrapper}>\n      <div className=\"formWrap\">\n        {errors.length > 0 && (\n          <ul>\n            {\" \"}\n            {errors.map((e, index) => {\n              return <li key={index}> {e} </li>;\n            })}{\" \"}\n          </ul>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            placeholder=\"Email\"\n            handleChange={(e) => setEmail(e.target.value)}\n          />\n\n          <Button type=\"submit\">Email Password </Button>\n        </form>\n\n        <div className=\"links\">\n          <Link to=\"/signin\">LogIn </Link> {` | `}{\" \"}\n          <Link to=\"/signup\">Register </Link>{\" \"}\n        </div>\n      </div>{\" \"}\n    </AuthWrapper>\n  );\n};\n\nexport default EmailPassword;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction studioheader() {\n  return (\n    <section class=\"jumbotronheader text-center\">\n    <div class=\"container\">\n   \n    </div>\n  </section>\n   \n    \n  );\n}\n\nexport default studioheader;\n","import React from \"react\";\nimport StudioHeader from \"../../components/StudioHeader\";\nimport \"./style.css\";\n\nfunction studio() {\n  return (\n    <>\n    <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n    <StudioHeader />\n    \n    </main>\n    </>\n  );\n}\n\nexport default studio;\n","import React, { useRef, useState, useEffect } from 'react';\nimport 'firebase/firestore';\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport firebase from 'firebase/app';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport './style.css'; // Import the external CSS file\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction Chat(){\n    const dummy = useRef();\n    const messagesRef = firestore.collection('messages');\n    const query = messagesRef.orderBy('createdAt').limit(25);\n\n    const [messages] = useCollectionData(query, { idField: 'id' });\n    const [formValue, setFormValue] = useState('');\n\n    // Use a state variable to hold the current user to handle the asynchronous nature of Firebase Auth\n    const [currentUser, setCurrentUser] = useState(auth.currentUser);\n\n    useEffect(() => {\n        // This listener will fire whenever the auth state changes (e.g., user signs in or out)\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n        });\n\n        // Cleanup the listener on component unmount\n        return () => unsubscribe();\n    }, []);\n\n\n    const sendMessage = async (e) => {\n        e.preventDefault();\n\n        // Check if currentUser is defined before accessing its properties\n        if (!currentUser) {\n            console.error(\"User is not authenticated. Please log in.\");\n            return;\n        }\n\n        const { uid, photoURL } = currentUser;\n\n        await messagesRef.add({\n            text: formValue,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            uid,\n            photoURL\n        })\n\n        setFormValue('');\n        dummy.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    return (\n        <div className=\"chat-container\">\n            <main className=\"chat-messages\">\n                {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} currentUserUid={currentUser?.uid} />)}\n                <span ref={dummy}></span>\n            </main>\n            <form className=\"chat-input\" onSubmit={sendMessage}>\n                <input\n                    value={formValue}\n                    onChange={(e) => setFormValue(e.target.value)}\n                    placeholder=\"say something nice\"\n                />\n                <button type=\"submit\" disabled={!formValue}>\n                    🕊️\n                </button>\n            </form>\n        </div>\n    );\n}\n\nfunction ChatMessage(props) {\n    const { text, uid, photoURL } = props.message;\n    // We now get the current user's uid from props, which is safe to use\n    const currentUserUid = props.currentUserUid;\n  \n    const messageClass = uid === currentUserUid ? 'my-message' : 'other-message';\n    // Check if uid is defined before calling substring\n    const finalPhotoURL = photoURL || `https://placehold.co/40x40/5c7c9a/FFFFFF?text=${uid ? uid.substring(0, 1).toUpperCase() : '?'}`;\n\n    return (\n        <div className={`chat-message ${messageClass}`}>\n            <div className=\"message-content\">\n                {messageClass === 'other-message' && (\n                    <img src={finalPhotoURL} alt=\"User Avatar\" className=\"chat-avatar\" />\n                )}\n                <div className=\"message-bubble\">\n                    <p>{text}</p>\n                </div>\n                {messageClass === 'my-message' && (\n                    <img src={finalPhotoURL} alt=\"User Avatar\" className=\"chat-avatar\" />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;","import React, { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { signOutUserStart } from \"../../redux/User/user.actions\";\nimport \"./style.css\";\n\nconst mapState = (state) => ({\n  currentUser: state.user.currentUser,\n  \n});\n\nconst Navbar = (props) => {\n  const location = useLocation();\n  const [activeMenu, setActiveMenu] = useState(false);\n  const dispatch = useDispatch();\n  const { currentUser} = useSelector(mapState);\n\n  const signOut = () => {\n    dispatch(signOutUserStart());\n  };\n\n  useEffect(() => {\n    setActiveMenu(false);\n  }, [location]);\n\n  return (\n    <>\n      <nav class=\"navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a class=\"navbar-brand col-md-3 col-lg-2 mr-0 px-3\" href=\"/\">\n          NoName{\" \"}\n        </a>{\" \"}\n        <button\n          class=\"navbar-toggler position-absolute d-md-none collapsed\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#sidebarMenu\"\n          aria-controls=\"sidebarMenu\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"> </span>{\" \"}\n        </button>{\" \"}\n        {currentUser && (\n          <ul class=\"navbar-nav px-3\">\n            <li class=\"nav-item text-nowrap\">\n              <a class=\"nav-link\" to=\"/signin\" onClick={() => signOut()}>\n                Sign out{\" \"}\n              </a>{\" \"}\n            </li>{\" \"}\n            <li class=\"nav-item text-nowrap\">\n              <Link to=\"/feed\">\n                feed{\" \"}\n              </Link>{\" \"}\n            </li>{\" \"}\n          </ul>\n        )}\n        {!currentUser && [\n          <ul class=\"navbar-nav px-3\">\n            <li class=\"nav-item text-nowrap\">\n              <Link to=\"/signin\">\n                Login <i class=\"fas fa-user-circle\"> </i>{\" \"}\n              </Link>{\" \"}\n            </li>{\" \"}\n          </ul>,\n        ]}{\" \"}\n      </nav>{\" \"}\n    </>\n  );\n};\n\nNavbar.defaultProps = {\n  currentUser: null,\n};\n\nexport default Navbar;\n","import React from \"react\";\n\n\nfunction sidebar(){\n    return(\n        <div class=\"container-fluid\">\n        <div class=\"row\">\n          <nav\n            id=\"sidebarMenu\"\n            class=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\"\n          >\n            <div class=\"sidebar-sticky pt-3\">\n              <ul class=\"nav flex-column\">\n                \n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"/feed\">\n                    <span data-feather=\"feed\"></span>\n                    Feed\n                  </a>\n                </li>\n                <li class=\"nav-item\">\n                  <a class=\"nav-link\" href=\"/studio\">\n                    <span data-feather=\"studio\"></span>\n                    Game\n                  </a>\n                </li>\n              </ul>\n              \n            </div>\n          </nav>\n        </div>\n      </div>\n    )\n}\n\nexport default sidebar;","import React from \"react\";\nimport Chat from \"../../components/Chat\"\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport Sidebar from \"../../components/SideBar\";\nimport \"./style.css\";\n\nconst feed = (props) => {\n  return (\n    <div className=\"feed-container\">\n      <Navbar />\n      <Sidebar />\n      <main className=\"main-content\">\n        <Chat />\n      </main>\n    </div>\n  );\n}\n\nexport default feed;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction carousel() {\n  return (\n    <div id=\"myCarousel\" class=\"carousel slide\" data-ride=\"carousel\">\n      <ol class=\"carousel-indicators\">\n        <li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>\n        <li data-target=\"#myCarousel\" data-slide-to=\"1\"></li>\n        <li data-target=\"#myCarousel\" data-slide-to=\"2\"></li>\n      </ol>\n      <div class=\"carousel-inner\">\n        <div class=\"carousel-item active\">\n          <img src=\"https://images.unsplash.com/photo-1492037766660-2a56f9eb3fcb?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTl8fGFydHxlbnwwfHwwfA%3D%3D&auto=format&fit=crop&w=500&q=60\"/>\n            \n          <div class=\"container\">\n            <div class=\"carousel-caption text-left\">\n              <h1>Welcome to NONAME</h1>\n              <p>\n                \n              </p>\n            </div>\n          </div>\n        </div>\n        <div class=\"carousel-item\">\n          <img src=\"https://images.unsplash.com/photo-1520207588543-1e545b20c19e?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTl8fHBhaW50ZXJ8ZW58MHx8MHw%3D&auto=format&fit=crop&w=500&q=60\"/>\n          <div class=\"container\">\n            <div class=\"carousel-caption\">\n              <h1>HOW TO PLAY</h1>\n              <p>\n                \n              </p>\n            </div>\n          </div>\n        </div>\n        <div class=\"carousel-item\">\n          <img src=\"https://images.unsplash.com/photo-1545518514-ce8448f542b3?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjN8fGFydCUyMHNob3d8ZW58MHx8MHw%3D&auto=format&fit=crop&w=500&q=60\"/>\n          <div class=\"container\">\n            <div class=\"carousel-caption text-right\">\n              <h1></h1>\n              <p>\n               \n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <a\n        class=\"carousel-control-prev\"\n        href=\"#myCarousel\"\n        role=\"button\"\n        data-slide=\"prev\"\n      >\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n        <span class=\"sr-only\">Previous</span>\n      </a>\n      <a\n        class=\"carousel-control-next\"\n        href=\"#myCarousel\"\n        role=\"button\"\n        data-slide=\"next\"\n      >\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span class=\"sr-only\">Next</span>\n      </a>\n    </div>\n  );\n}\nexport default carousel;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction marketing() {\n  return (\n    <div class=\"container marketing\">\n      <div class=\"row\">\n        <div class=\"col-lg-6\">\n          <img\n            class=\"bd-placeholder-img rounded-circle\"\n            width=\"140\"\n            height=\"140\"\n            src=\"https://images.unsplash.com/photo-1500628550463-c8881a54d4d4?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8YXJ0aXN0fGVufDB8fDB8&auto=format&fit=crop&w=500&q=60\"\n          />\n\n          <h2>Rules</h2>\n          <p>\n           \n          </p>\n        </div>\n\n        <div class=\"col-lg-6\">\n          <img\n            class=\"bd-placeholder-img rounded-circle\"\n            width=\"140\"\n            height=\"140\"\n            src=\"https://images.unsplash.com/photo-1544663808-12f0dd383df7?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8OTl8fGFydCUyMGNvbGxlY3RvcnxlbnwwfHwwfA%3D%3D&auto=format&fit=crop&w=500&q=60\"\n          />\n\n          <h2>lets play</h2>\n          <p>\n           \n          </p>\n        </div>\n      </div>\n\n      <hr class=\"featurette-divider\"></hr>\n\n      <div class=\"row featurette\">\n        <div class=\"col-md-7\">\n          <h2 class=\"featurette-heading\">\n            NOname.{\" \"}\n            <span class=\"text-muted\">\n              ncl employees learning\n            </span>\n          </h2>\n          <p class=\"lead\">\n            Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id\n            ligula porta felis euismod semper. Praesent commodo cursus magna,\n            vel scelerisque nisl consectetur. Fusce dapibus, tellus ac cursus\n            commodo.\n          </p>\n        </div>\n        <div class=\"col-md-5\">\n          <img\n            class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\"\n            width=\"500\"\n            height=\"500\"\n            src=\"https://images.unsplash.com/photo-1566954979172-eaba308acdf0?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTcyfHxhcnQlMjBnYWxsZXJ5fGVufDB8fDB8&auto=format&fit=crop&w=500&q=60\"\n          />\n        </div>\n      </div>\n\n      <hr class=\"featurette-divider\"></hr>\n\n      <div class=\"row featurette\">\n        <div class=\"col-md-7 order-md-2\">\n          <h2 class=\"featurette-heading\">\n            Feel Inspired?{\" \"}\n            <span class=\"text-muted\">\n              .......\n            </span>\n          </h2>\n          <p class=\"lead\">\n            Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id\n            ligula porta felis euismod semper. Praesent commodo cursus magna,\n            vel scelerisque nisl consectetur. Fusce dapibus, tellus ac cursus\n            commodo.\n          </p>\n        </div>\n        <div class=\"col-md-5 order-md-1\">\n          <img\n            class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\"\n            width=\"500\"\n            height=\"500\"\n            src=\"https://images.unsplash.com/photo-1472457974886-0ebcd59440cc?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8M3x8YXJ0JTIwY2xhc3Nlc3xlbnwwfHwwfA%3D%3D&auto=format&fit=crop&w=500&q=60\"\n          />\n        </div>\n      </div>\n\n      <hr class=\"featurette-divider\"></hr>\n    </div>\n  );\n}\n\nexport default marketing;\n","import React from \"react\";\n\n\nfunction footer() {\n    return (\n\n<footer class=\"container\">\n    <p class=\"float-right\"><a href=\"#\">Back to top</a></p>\n    <p>&copy; 2025 NoName. &middot; <a href=\"#\">Privacy</a> &middot; <a href=\"#\">Terms</a></p>\n  </footer>\n    );\n}\n\nexport default footer;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { emailSignInStart, googleSignInStart } from '../../redux/User/user.actions';\n\n// Chakra UI Component Imports\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  FormHelperText,\n  Heading,\n  Text,\n  VStack,\n  HStack,\n  Box,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { FaGoogle } from 'react-icons/fa';\n\n// This is a simple wrapper component to handle the page layout,\n// replicating what your imported AuthWrapper likely does.\nconst AuthWrapper = ({ headline, children }) => {\n  const bgColor = useColorModeValue('gray.50', 'gray.800');\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const textColor = useColorModeValue('gray.700', 'gray.200');\n\n  return (\n    <Box\n      minH=\"100vh\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      bg={bgColor}\n      p={4}\n    >\n      <Box\n        bg={cardBg}\n        p={8}\n        rounded=\"2xl\"\n        shadow=\"xl\"\n        borderWidth=\"1px\"\n        borderColor={useColorModeValue('gray.100', 'gray.600')}\n        w=\"full\"\n        maxW=\"md\"\n      >\n        <VStack spacing={4} align=\"stretch\" textAlign=\"center\" mb={6}>\n          <Heading as=\"h1\" size=\"xl\" color=\"blue.600\">\n            {headline}\n          </Heading>\n          <Text color={textColor}>\n            Sign in to your account to continue\n          </Text>\n        </VStack>\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\n// Map the user state from Redux to component props\nconst mapState = ({ user }) => ({\n  currentUser: user.currentUser,\n});\n\nconst SignIn = () => {\n  // Hooks for state and dispatching actions\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { currentUser } = useSelector(mapState);\n\n  // Local state for form inputs and password visibility\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  // Hook to handle redirection after a successful sign-in\n  useEffect(() => {\n    if (currentUser) {\n      resetForm();\n      history.push('/');\n    }\n  }, [currentUser, history]);\n\n  // Function to clear form inputs\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  // Function to handle email/password form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(emailSignInStart({ email, password }));\n  };\n\n  // Function to handle Google Sign-In\n  const handleGoogleSignIn = () => {\n    dispatch(googleSignInStart());\n  };\n\n  const configAuthWrapper = {\n    headline: 'Welcome Back',\n  };\n\n\n  return (\n    <AuthWrapper {...configAuthWrapper}>\n      <form onSubmit={handleSubmit}>\n        <VStack spacing={6} align=\"stretch\">\n          {/* Email Input Field */}\n          <FormControl id=\"email\" isRequired>\n            <FormLabel>Email address</FormLabel>\n            <Input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"you@example.com\"\n              borderColor=\"gray.300\"\n              focusBorderColor=\"blue.500\"\n            />\n            <FormHelperText>We'll never share your email.</FormHelperText>\n          </FormControl>\n\n          {/* Password Input Field with Show/Hide button */}\n          <FormControl id=\"password\" isRequired>\n            <FormLabel>Password</FormLabel>\n            <InputGroup>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"••••••••\"\n                borderColor=\"gray.300\"\n                focusBorderColor=\"blue.500\"\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button\n                  h=\"1.75rem\"\n                  size=\"sm\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n            {/* Forgot Password Link */}\n            <FormHelperText>\n              <Link to=\"/passwordReset\">\n                <Text color=\"blue.500\" fontWeight=\"medium\">Forgot password?</Text>\n              </Link>\n            </FormHelperText>\n          </FormControl>\n\n          {/* Sign In Button */}\n          <Button\n            type=\"submit\"\n            colorScheme=\"blue\"\n            size=\"lg\"\n            rounded=\"lg\"\n            width=\"full\"\n            mt={4}\n          >\n            Sign In\n          </Button>\n\n          {/* Social Sign-in Button */}\n          <Button\n            leftIcon={<FaGoogle />}\n            colorScheme=\"gray\"\n            size=\"lg\"\n            rounded=\"lg\"\n            width=\"full\"\n            onClick={handleGoogleSignIn}\n          >\n            Sign in with Google\n          </Button>\n\n          {/* Register Link */}\n          <HStack spacing={1} justify=\"center\" mt={4}>\n            <Text>Don't have an account?</Text>\n            <Link to=\"/signup\">\n              <Text color=\"blue.500\" fontWeight=\"bold\">Register</Text>\n            </Link>\n          </HStack>\n        </VStack>\n      </form>\n    </AuthWrapper>\n  );\n};\n\nexport default SignIn;\n\n","import React from 'react';\nimport './style.css';\nimport Signup from '../../components/SignIn/'; // Import the existing Signup component\n\nconst SignUpModal = ({ onClose }) => {\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        <button className=\"modal-close\" onClick={onClose}>\n          &times;\n        </button>\n        <Signup />\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpModal;","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\"; // Import useSelector\nimport Carousel from \"../../components/Carousel/index\";\nimport Marketing from \"../../components/marketing\";\nimport Footer from \"../../components/Footer\";\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport SignUpModal from \"../../components/SignUpModal/\";\nimport \"./style.css\";\n\n// Map the Redux state to a prop\nconst mapState = ({ user }) => ({\n  currentUser: user.currentUser,\n});\n\nconst Home = (props) => {\n  const { currentUser } = useSelector(mapState); // Get currentUser from Redux\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    // Check if a user is NOT logged in via Redux state\n    if (!currentUser) {\n      setIsModalOpen(true);\n    }\n  }, [currentUser]); // The dependency array now watches for changes in currentUser\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <Navbar {...props} />\n      <Carousel />\n      <Marketing />\n      <Footer />\n      {isModalOpen && <SignUpModal onClose={handleCloseModal} />}\n    </>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport SignIn from \"./../../components/SignIn\";\nimport { Center } from \"@chakra-ui/react\";\n\nconst Login = (props) => {\n  return(\n    <Center>\n  <SignIn />\n  </Center>\n)};\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport { signUpUserStart } from '../../redux/User/user.actions';\n\n// Chakra UI Component Imports\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Heading,\n  Text,\n  VStack,\n  HStack,\n  Box,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { FaGoogle } from 'react-icons/fa';\n\n// This is a simple wrapper component to handle the page layout,\n// replicating what your imported AuthWrapper likely does.\nconst AuthWrapper = ({ headline, children }) => {\n  const bgColor = useColorModeValue('gray.50', 'gray.800');\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const textColor = useColorModeValue('gray.700', 'gray.200');\n\n  return (\n    <Box\n      minH=\"100vh\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      bg={bgColor}\n      p={4}\n    >\n      <Box\n        bg={cardBg}\n        p={8}\n        rounded=\"2xl\"\n        shadow=\"xl\"\n        borderWidth=\"1px\"\n        borderColor={useColorModeValue('gray.100', 'gray.600')}\n        w=\"full\"\n        maxW=\"md\"\n      >\n        <VStack spacing={4} align=\"stretch\" textAlign=\"center\" mb={6}>\n          <Heading as=\"h1\" size=\"xl\" color=\"blue.600\">\n            {headline}\n          </Heading>\n          <Text color={textColor}>\n            Create your account to get started\n          </Text>\n        </VStack>\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nconst mapState = ({ user }) => ({\n  currentUser: user.currentUser,\n  userErr: user.userErr,\n});\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { currentUser, userErr } = useSelector(mapState);\n\n  const [displayName, setDisplayName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n\n  useEffect(() => {\n    if (currentUser) {\n      reset();\n      history.push('/');\n    }\n  }, [currentUser, history]);\n\n  useEffect(() => {\n    if (Array.isArray(userErr) && userErr.length > 0) {\n      setErrors(userErr);\n    }\n  }, [userErr]);\n\n  const reset = () => {\n    setDisplayName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setErrors([]);\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    dispatch(\n      signUpUserStart({\n        displayName,\n        email,\n        password,\n        confirmPassword,\n      })\n    );\n  };\n  \n  const configAuthWrapper = {\n    headline: 'Create Account',\n  };\n\n  return (\n    <AuthWrapper {...configAuthWrapper}>\n      <form onSubmit={handleFormSubmit}>\n        <VStack spacing={6} align=\"stretch\">\n          {errors.length > 0 && (\n            <Box color=\"red.500\" p={2} rounded=\"md\" borderWidth=\"1px\" borderColor=\"red.200\">\n              {errors.map((err, index) => (\n                <Text key={index}>{err}</Text>\n              ))}\n            </Box>\n          )}\n\n          <FormControl id=\"displayName\" isRequired>\n            <FormLabel>Full Name</FormLabel>\n            <Input\n              type=\"text\"\n              value={displayName}\n              onChange={(e) => setDisplayName(e.target.value)}\n              placeholder=\"John Doe\"\n              borderColor=\"gray.300\"\n              focusBorderColor=\"blue.500\"\n            />\n          </FormControl>\n\n          <FormControl id=\"email\" isRequired>\n            <FormLabel>Email Address</FormLabel>\n            <Input\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"you@example.com\"\n              borderColor=\"gray.300\"\n              focusBorderColor=\"blue.500\"\n            />\n          </FormControl>\n\n          <FormControl id=\"password\" isRequired>\n            <FormLabel>Password</FormLabel>\n            <InputGroup>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"••••••••\"\n                borderColor=\"gray.300\"\n                focusBorderColor=\"blue.500\"\n              />\n              <InputRightElement width=\"4.5rem\">\n                <Button\n                  h=\"1.75rem\"\n                  size=\"sm\"\n                  onClick={() => setShowPassword(!showPassword)}\n                >\n                  {showPassword ? 'Hide' : 'Show'}\n                </Button>\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n\n          <FormControl id=\"confirmPassword\" isRequired>\n            <FormLabel>Confirm Password</FormLabel>\n            <Input\n              type={showPassword ? 'text' : 'password'}\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              placeholder=\"••••••••\"\n              borderColor=\"gray.300\"\n              focusBorderColor=\"blue.500\"\n            />\n          </FormControl>\n\n          <Button type=\"submit\" colorScheme=\"blue\" size=\"lg\" rounded=\"lg\" width=\"full\" mt={4}>\n            Register\n          </Button>\n        </VStack>\n      </form>\n\n      <HStack spacing={1} justify=\"center\" mt={6}>\n        <Text>Already have an account?</Text>\n        <Link to=\"/signin\">\n          <Text color=\"blue.500\" fontWeight=\"bold\">Log In</Text>\n        </Link>\n      </HStack>\n    </AuthWrapper>\n  );\n};\n\nexport default Signup;","import React, { Component } from \"react\";\nimport Signup from \"../../components/Signup\";\n\nconst Registration = (props) => {\n    return <Signup /> ;\n};\n\nexport default Registration;","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { checkUserSession } from \"./redux/User/user.actions\";\n\n\n//Components\nimport PasswordReset from \"./components/PasswordReset\";\n\n\n//Pages\nimport Studio from \"./Pages/game\";\nimport Feed from \"./Pages/Feed\";\nimport Home from \"./Pages/Home\";\nimport Login from \"./Pages/Login\";\nimport SignUp from \"./Pages/SignUp\";\n\n\nconst App = (props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(checkUserSession());\n  }, []);\n  return (\n    <>\n      <Switch>\n        <Route path=\"/signin\" render={() => <Login />} />\n        <Route path=\"/passwordReset\" render={() => <PasswordReset />} />\n        <Route path=\"/signup\" render={() => <SignUp/>} />\n        <Route exact path=\"/\" render={() => (\n        \n          <Home/>\n          )} />\n        <Route path=\"/game\" render={() => <Studio />} />\n        <Route path=\"/feed\" render={() => <Feed></Feed>} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\"; \nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/createStore\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter> \n        <PersistGate persistor={persistor}> \n        <ChakraProvider>\n          <App />\n          </ChakraProvider>\n        </PersistGate>{\" \"}\n      </HashRouter>{\" \"}\n    </Provider>{\" \"}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}