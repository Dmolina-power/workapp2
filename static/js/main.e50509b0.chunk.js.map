{"version":3,"sources":["redux/User/user.types.js","redux/User/user.reducer.js","redux/rootReducer.js","Firebase/Utils.js","Firebase/config.js","redux/User/user.actions.js","redux/User/user.helpers.js","redux/User/user.sagas.js","redux/createStore.js","redux/rootSaga.js","components/AuthWrapper/index.js","components/forms/FormInput/index.js","components/forms/Button/index.js","components/PasswordReset/index.js","components/Navbar/index.js","Pages/game/index.js","components/Chat/index.js","Pages/Feed/index.js","Pages/Notes/index.js","Pages/Sales/index.js","components/marketing/index.js","components/Footer/index.js","components/AuthModal/index.js","components/SignIn/index.js","components/Signup/index.js","Pages/Home/index.js","Pages/Login/index.js","Pages/registration/index.js","App.js","serviceWorker.js","index.js","assets/images/ryan-johns-1MPHndKoQQ4-unsplash.jpg"],"names":["userTypes","EMAIL_SIGN_IN_START","SIGN_IN_SUCCESS","CHECK_USER_SESSION","SIGN_OUT_USER_START","SIGN_OUT_USER_SUCCESS","SIGN_UP_USER_START","RESET_PASSWORD_START","RESET_PASSWORD_SUCCESS","GOOGLE_SIGN_IN_START","USER_ERROR","RESET_USER_STATE","INITIAL_STATE","currentUser","resetPasswordSuccess","userErr","userReducer","state","arguments","length","undefined","action","type","_objectSpread","payload","rootReducer","combineReducers","user","configStorage","key","storage","whitelist","persistReducer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","googleProvider","GoogleAuthProvider","handleUserProfile","async","userAuth","additionalData","_ref","uid","userRef","doc","concat","get","exists","displayName","email","timestamp","Date","userRoles","set","createdDate","err","signInSuccess","userError","handleResetPasswordAPI","config","url","Promise","resolve","reject","sendPasswordResetEmail","then","catch","getSnapshotFromUserAuth","call","snapshot","put","id","data","emailSignIn","password","signInWithEmailAndPassword","onEmailSignInStart","takeLatest","isUserAuthenticated","unsubscribe","onAuthStateChanged","onCheckUserSession","signOutUser","signOut","onSignOutUserStart","signUpUser","_ref2","confirmPassword","createUserWithEmailAndPassword","console","log","onSignUpUserStart","resetPassword","_ref3","onResetPasswordStart","googleSignIn","signInWithPopup","onGoogleSignInStart","userSagas","all","sagaMiddleware","createSagaMiddle","middlewares","thunk","logger","store","createStore","composeWithDevTools","applyMiddleware","run","persistor","persistStore","AuthWrapper","headline","children","React","createElement","className","FormInput","handleChange","label","otherProps","_objectWithoutProperties","_excluded","Object","assign","onChange","Button","mapState","EmailPassword","props","dispatch","useDispatch","history","useHistory","useSelector","setEmail","useState","errors","setErrors","useEffect","push","Array","isArray","configAuthWrapper","map","e","index","onSubmit","preventDefault","name","value","placeholder","target","Link","to","ChakraNavbar","Box","bg","color","px","py","position","top","width","zIndex","Flex","h","alignItems","justifyContent","as","RouterLink","fontSize","fontWeight","HStack","spacing","Text","colorScheme","onClick","game","Fragment","Navbar","role","class","ChatMessage","text","photoURL","message","messageClass","currentUserUid","finalPhotoURL","substring","toUpperCase","src","alt","Chat","dummy","useRef","messagesRef","collection","query","orderBy","limit","messages","useCollectionData","idField","formValue","setFormValue","setCurrentUser","msg","ref","error","add","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","disabled","feed","notes","sales","marketing","height","footer","href","AuthModal","isOpen","onClose","modalClass","classNames","stopPropagation","useColorModeValue","cardBg","textColor","p","rounded","shadow","borderWidth","borderColor","w","maxW","VStack","align","textAlign","mb","Heading","size","SignIn","setPassword","showPassword","setShowPassword","isModalOpen","setIsModalOpen","signInPageClasses","style","backgroundImage","backgroundSize","backgroundPosition","minHeight","display","FormControl","isRequired","FormLabel","Input","focusBorderColor","FormHelperText","InputGroup","InputRightElement","mt","leftIcon","FaGoogle","handleGoogleSignIn","justify","Signup","setDisplayName","setConfirmPassword","reset","event","Home","authMode","setAuthMode","handleCloseModal","toggleAuthMode","mode","Marketing","Footer","onToggleMode","Login","Center","Registration","App","Switch","Route","path","render","PasswordReset","exact","Games","Feed","Notes","Sales","Boolean","window","location","hostname","match","ReactDOM","StrictMode","Provider","HashRouter","PersistGate","ChakraProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"4aAciBA,MAdC,CACdC,oBAAqB,sBACrBC,gBAAiB,kBACjBC,mBAAoB,qBACpBC,oBAAqB,sBACrBC,sBAAuB,wBACvBC,mBAAoB,qBACpBC,qBAAsB,uBACtBC,uBAAwB,yBACxBC,qBAAsB,uBACtBC,WAAY,aACZC,iBAAkB,oBCTtB,MAAMC,EAAgB,CACpBC,YAAa,KACbC,sBAAsB,EACtBC,QAAS,IAgCIC,MA7BK,WAAoC,IAAnCC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGN,EAAeS,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAOC,MACb,KAAKtB,EAAUE,gBACb,OAAAqB,wBAAA,GACKN,GAAK,IACRJ,YAAaQ,EAAOG,QACpBT,QAAS,KAEb,KAAKf,EAAUQ,uBACb,OAAAe,wBAAA,GACKN,GAAK,IACRH,qBAAsBO,EAAOG,UAEjC,KAAKxB,EAAUU,WACb,OAAAa,wBAAA,GACKN,GAAK,IACRF,QAASM,EAAOG,UAEpB,KAAKxB,EAAUW,iBACf,KAAKX,EAAUK,sBACb,OAAAkB,wBAAA,GACKN,GACAL,GAEP,QACE,OAAOK,IC1BN,MAAMQ,EAAcC,0BAAgB,CACzCC,KAAMX,IAGFY,EAAgB,CACpBC,IAAK,OACLC,YACAC,UAAW,CAAC,aAGCC,kBAAeJ,EAAeH,G,qCCX7CQ,IAASC,cCNqB,CAC1BC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBDAZ,MAAMC,EAAOV,IAASU,OAChBC,EAAYX,IAASW,YAErBC,EAAiB,IAAIZ,IAASU,KAAKG,mBASnCC,EAAoBC,UAAyC,IAAlC,SAAEC,EAAQ,eAAEC,GAAgBC,EAClE,IAAKF,EAAU,OACf,MAAM,IAAEG,GAAQH,EAEVI,EAAUT,EAAUU,IAAI,SAADC,OAAUH,IAGvC,WAFuBC,EAAQG,OAEjBC,OAAQ,CACpB,MAAM,YAAEC,EAAW,MAAEC,GAAUV,EACzBW,EAAY,IAAIC,KAChBC,EAAY,CAAC,QAEnB,UACQT,EAAQU,IAAGxC,YAAC,CAChBmC,cACAC,QACAK,YAAaJ,EACbE,aACGZ,IAEL,MAAMe,KAKV,OAAOZ,GEtCIa,EAAgBvC,IAAI,CAC/BL,KAAMtB,EAAUE,gBAChBsB,QAASG,IAoBEwC,EAAYF,IAAG,CAC1B3C,KAAMtB,EAAUU,WAChBc,QAASyC,IC5BEG,EAA0BT,IACrC,MAAMU,EAAS,CACbC,IAAK,+BAGP,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAC3B9B,EAAK+B,uBAAuBf,EAAOU,GAChCM,KAAK,KACJH,MAEDI,MAAM,KAELH,EADY,CAAC,4CCPd,SAAUI,EAAwBlD,GAA4B,IAAtBuB,EAAchC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAC9D,IACE,MAAMmC,QAAgByB,YAAK/B,EAAmB,CAAEE,SAAUtB,EAAMuB,mBAC1D6B,QAAiB1B,EAAQG,YACzBwB,YACJd,EAAa3C,YAAC,CACZ0D,GAAIF,EAASE,IACVF,EAASG,UAIhB,MAAOjB,KAKJ,SAAUkB,EAAWhC,GAAoC,IAAjC3B,SAAS,MAAEmC,EAAK,SAAEyB,IAAYjC,EAC3D,IACE,MAAM,KAAExB,SAAegB,EAAK0C,2BAA2B1B,EAAOyB,SACxDP,EAAwBlD,GAE9B,MAAOsC,KAKJ,SAAUqB,UACTC,YAAWvF,EAAUC,oBAAqBkF,GAG3C,SAAUK,IACf,IACE,MAAMvC,QJUD,IAAIsB,QAAQ,CAACC,EAASC,KAC3B,MAAMgB,EAAc9C,EAAK+C,mBAAmBzC,IAC1CwC,IACAjB,EAAQvB,IACPwB,KIbH,IAAKxB,EAAU,aACT4B,EAAwB5B,GAE9B,MAAOgB,KAKJ,SAAU0B,UACTJ,YAAWvF,EAAUG,mBAAoBqF,GAG1C,SAAUI,IACf,UACQjD,EAAKkD,gBACLb,YFnCwB,CAChC1D,KAAMtB,EAAUK,wBEsCd,MAAO4D,KAKJ,SAAU6B,UACTP,YAAWvF,EAAUI,oBAAqBwF,GAG3C,SAAUG,EAAUC,GAKrB,IALwBxE,SAAS,YACrCkC,EAAW,MACXC,EAAK,SACLyB,EAAQ,gBACRa,IACCD,EAED,GAAIZ,IAAaa,EAQjB,IACE,MAAM,KAAEtE,SAAegB,EAAKuD,+BAA+BvC,EAAOyB,GAC5DlC,EAAiB,CAAEQ,qBACnBmB,EAAwBlD,EAAMuB,GAEpC,MAAOe,GACPkC,QAAQC,IAAInC,OAdd,CACE,MAAMA,EAAM,CAAC,8BACPe,YACJb,EAAUF,KAgBT,SAAUoC,UACTd,YAAWvF,EAAUM,mBAAoByF,GAG1C,SAAUO,EAAaC,GAAyB,IAAtB/E,SAAS,MAAEmC,IAAQ4C,EAClD,UACQzB,YAAKV,EAAwBT,SAC7BqB,YF9D0B,CAClC1D,KAAMtB,EAAUQ,uBAChBgB,SAAS,IEgEP,MAAOyC,SACDe,YACJb,EAAUF,KAKT,SAAUuC,UACTjB,YAAWvF,EAAUO,qBAAsB+F,GAI5C,SAAUG,IACf,IACE,MAAM,KAAE9E,SAAegB,EAAK+D,gBAAgB7D,SACtCgC,EAAwBlD,GAE9B,MAAOsC,KAKJ,SAAU0C,UACTpB,YAAWvF,EAAUS,qBAAsBgG,GAIpC,SAAUG,UACjBC,YAAI,CACR/B,YAAKQ,GACLR,YAAKa,GACLb,YAAKgB,GACLhB,YAAKuB,GACLvB,YAAK0B,GACL1B,YAAK6B,KCjIT,MAAMG,EAAiBC,cACVC,EAAc,CAACC,IAAOH,EAAgBI,KAEtCC,EAAQC,sBAAY3F,EAAa4F,8BAAoBC,6BAAmBN,KACrFF,EAAeS,KCTA,kBACPV,YAAI,CACR/B,YAAK8B,QDSF,MAAMY,EAAYC,YAAaN,GAEvB,I,SEFEO,OAdGvE,IAA6B,IAA5B,SAAEwE,EAAQ,SAAEC,GAAUzE,EACvC,OACE0E,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,OAAKC,UAAU,QACZJ,GAAYE,IAAAC,cAAA,UAAKH,GAElBE,IAAAC,cAAA,OAAKC,UAAU,YACZH,GAAYA,M,2CCGVI,OAVG7E,IAA6C,IAA5C,aAAE8E,EAAY,MAAEC,GAAsB/E,EAAZgF,EAAUC,aAAAjF,EAAAkF,IACrD,OACER,IAAAC,cAAA,OAAKC,UAAU,WACZG,GAASL,IAAAC,cAAA,aAAQI,GAElBL,IAAAC,cAAA,QAAAQ,OAAAC,OAAA,CAAOR,UAAU,YAAYS,SAAUP,GAAkBE,M,sBCIhDM,OARAtF,IAAkC,IAAjC,SAAEyE,GAAyBzE,EAAZgF,EAAUC,aAAAjF,EAAAkF,IACvC,OACER,IAAAC,cAAA,SAAAQ,OAAAC,OAAA,CAAQR,UAAU,OAAUI,GACzBP,ICMP,MAAMc,GAAWvF,IAAA,IAAC,KAAExB,GAAMwB,EAAA,MAAM,CAC9BrC,qBAAsBa,EAAKb,qBAC3BC,QAASY,EAAKZ,UAiED4H,OA9DQC,IACrB,MAAMC,EAAWC,cACXC,EAAUC,gBACV,qBAAElI,EAAoB,QAAEC,GAAYkI,YAAYP,KAC/C/E,EAAOuF,GAAYC,mBAAS,KAC5BC,EAAQC,GAAaF,mBAAS,IAErCG,oBAAU,KACJxI,IACF+H,ERkBwB,CAC5BvH,KAAMtB,EAAUW,mBQlBZoI,EAAQQ,KAAK,aAEd,CAACzI,IAEJwI,oBAAU,KACJE,MAAMC,QAAQ1I,IAAYA,EAAQI,OAAS,GAC7CkI,EAAUtI,IAEX,CAACA,IAEJ,MAKM2I,EAAoB,CACxB/B,SAAU,kBAGZ,OACEE,IAAAC,cAACJ,GAAgBgC,EACf7B,IAAAC,cAAA,OAAKC,UAAU,YACZqB,EAAOjI,OAAS,GACf0G,IAAAC,cAAA,UACG,IACAsB,EAAOO,IAAI,CAACC,EAAGC,IACPhC,IAAAC,cAAA,MAAIjG,IAAKgI,GAAO,IAAED,EAAE,MACzB,KAIR/B,IAAAC,cAAA,QAAMgC,SArBUF,IACpBA,EAAEG,iBACFlB,ERL6C,CAC/CvH,KAAMtB,EAAUO,qBAChBiB,QQG8B,CAAEmC,aAoBxBkE,IAAAC,cAACE,GAAS,CACR1G,KAAK,QACL0I,KAAK,QACLC,MAAOtG,EACPuG,YAAY,QACZjC,aAAe2B,GAAMV,EAASU,EAAEO,OAAOF,SAGzCpC,IAAAC,cAACW,GAAM,CAACnH,KAAK,UAAS,oBAGxBuG,IAAAC,cAAA,OAAKC,UAAU,SACbF,IAAAC,cAACsC,IAAI,CAACC,GAAG,WAAU,UAAa,IAAC,MAAQ,IACzCxC,IAAAC,cAACsC,IAAI,CAACC,GAAG,WAAU,aAAiB,MAEjC,M,4DCpEb,MAAM3B,GAAYzH,IAAK,CACnBJ,YAAaI,EAAMU,KAAKd,cA4CbyJ,OAzCMA,KACjB,MAAMzB,EAAWC,eACX,YAAEjI,GAAgBoI,YAAYP,IAMpC,OACIb,IAAAC,cAACyC,KAAG,CAACC,GAAG,WAAWC,MAAM,QAAQC,GAAI,EAAGC,GAAI,EAAGC,SAAS,QAAQC,IAAI,IAAIC,MAAM,OAAOC,OAAO,QACxFlD,IAAAC,cAACkD,KAAI,CAACC,EAAG,GAAIC,WAAW,SAASC,eAAe,iBAC5CtD,IAAAC,cAACyC,KAAG,KACA1C,IAAAC,cAACsC,KAAI,CAACgB,GAAIC,IAAYhB,GAAG,IAAIiB,SAAS,KAAKC,WAAW,QAAO,WAGhE1K,EACGgH,IAAAC,cAAC0D,KAAM,CAACC,QAAS,EAAGP,WAAW,UAC3BrD,IAAAC,cAACsC,KAAI,CAACgB,GAAIC,IAAYhB,GAAG,SACrBxC,IAAAC,cAAC4D,KAAI,KAAC,SAEV7D,IAAAC,cAACsC,KAAI,CAACgB,GAAIC,IAAYhB,GAAG,UACrBxC,IAAAC,cAAC4D,KAAI,KAAC,cACH7D,IAAAC,cAACsC,KAAI,CAACgB,GAAIC,IAAYhB,GAAG,UAC5BxC,IAAAC,cAAC4D,KAAI,KAAC,UACH7D,IAAAC,cAACsC,KAAI,CAACgB,GAAIC,IAAYhB,GAAG,UAC5BxC,IAAAC,cAAC4D,KAAI,KAAC,UAEV7D,IAAAC,cAACW,KAAM,CAACkD,YAAY,OAAOC,QAvB/B/F,KACZgD,ETCwB,CAC9BvH,KAAMtB,EAAUI,wBSoBmD,aAGjDyH,IAAAC,cAAC0D,KAAM,CAACC,QAAS,EAAGP,WAAW,UAC3BrD,IAAAC,cAACsC,KAAI,CAACgB,GAAIC,IAAYhB,GAAG,WACrBxC,IAAAC,cAAC4D,KAAI,KAAC,c,OC3BnBG,OAXf,WACE,OACEhE,IAAAC,cAAAD,IAAAiE,SAAA,KACAjE,IAAAC,cAACiE,GAAM,MACPlE,IAAAC,cAAA,QAAMkE,KAAK,OAAOC,MAAM,4C,0BCA5B,MAAMtJ,GAAOV,IAASU,OAChBC,GAAYX,IAASW,YAkE3B,SAASsJ,GAAYtD,GACjB,MAAM,KAAEuD,EAAI,IAAE/I,EAAG,SAAEgJ,GAAaxD,EAAMyD,QAIhCC,EAAelJ,IAFEwF,EAAM2D,eAEiB,aAAe,gBAEvDC,EAAgBJ,GAAQ,iDAAA7I,OAAqDH,EAAMA,EAAIqJ,UAAU,EAAG,GAAGC,cAAgB,KAE7H,OACI7E,IAAAC,cAAA,OAAKC,UAAS,gBAAAxE,OAAkB+I,IAC5BzE,IAAAC,cAAA,OAAKC,UAAU,mBACO,kBAAjBuE,GACGzE,IAAAC,cAAA,OAAK6E,IAAKH,EAAeI,IAAI,cAAc7E,UAAU,gBAEzDF,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,SAAIqE,IAEU,eAAjBG,GACGzE,IAAAC,cAAA,OAAK6E,IAAKH,EAAeI,IAAI,cAAc7E,UAAU,kBAO1D8E,OA1Ff,WACI,MAAMC,EAAQC,mBACRC,EAAcpK,GAAUqK,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,KAE9CC,GAAYC,aAAkBJ,EAAO,CAAEK,QAAS,QAChDC,EAAWC,GAAgBtE,mBAAS,KAGpCtI,EAAa6M,GAAkBvE,mBAASxG,GAAK9B,aAmCpD,OAjCAyI,oBAAU,KAEN,MAAM7D,EAAc9C,GAAK+C,mBAAmB/D,IACxC+L,EAAe/L,KAInB,MAAO,IAAM8D,KACd,IA0BCoC,IAAAC,cAAA,OAAKC,UAAU,kBACXF,IAAAC,cAAA,QAAMC,UAAU,iBACXsF,GAAYA,EAAS1D,IAAIgE,GAAO9F,IAAAC,cAACoE,GAAW,CAACrK,IAAK8L,EAAI1I,GAAIoH,QAASsB,EAAKpB,eAA2B,OAAX1L,QAAW,IAAXA,OAAW,EAAXA,EAAauC,OACtGyE,IAAAC,cAAA,QAAM8F,IAAKd,KAEfjF,IAAAC,cAAA,QAAMC,UAAU,aAAa+B,SA5BjB9G,UAIhB,GAHA4G,EAAEG,kBAGGlJ,EAED,YADAsF,QAAQ0H,MAAM,6CAIlB,MAAM,IAAEzK,EAAG,SAAEgJ,GAAavL,QAEpBmM,EAAYc,IAAI,CAClB3B,KAAMqB,EACNO,UAAW9L,IAASW,UAAUoL,WAAWC,kBACzC7K,MACAgJ,aAGJqB,EAAa,IACbX,EAAMoB,QAAQC,eAAe,CAAEC,SAAU,aAUjCvG,IAAAC,cAAA,SACImC,MAAOuD,EACPhF,SAAWoB,GAAM6D,EAAa7D,EAAEO,OAAOF,OACvCC,YAAY,uBAEhBrC,IAAAC,cAAA,UAAQxG,KAAK,SAAS+M,UAAWb,GAAW,yB,OClD7Cc,OAXD1F,GAEVf,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAACiE,GAAM,MACPlE,IAAAC,cAAA,QAAMC,UAAU,gBACdF,IAAAC,cAAC+E,GAAI,QCIE0B,OAXf,WACE,OACE1G,IAAAC,cAAAD,IAAAiE,SAAA,KACAjE,IAAAC,cAACiE,GAAM,MACPlE,IAAAC,cAAA,QAAMkE,KAAK,OAAOC,MAAM,4CCObuC,OAXf,WACE,OACE3G,IAAAC,cAAAD,IAAAiE,SAAA,KACAjE,IAAAC,cAACiE,GAAM,MACPlE,IAAAC,cAAA,QAAMkE,KAAK,OAAOC,MAAM,4C,OC6DbwC,OAlEf,WACE,OACE5G,IAAAC,cAAA,OAAKmE,MAAM,uBACTpE,IAAAC,cAAA,OAAKmE,MAAM,QAIXpE,IAAAC,cAAA,MAAImE,MAAM,uBAEVpE,IAAAC,cAAA,OAAKmE,MAAM,kBACTpE,IAAAC,cAAA,OAAKmE,MAAM,YACTpE,IAAAC,cAAA,MAAImE,MAAM,sBAAqB,UACrB,IACRpE,IAAAC,cAAA,QAAMmE,MAAM,cAAa,2BAI3BpE,IAAAC,cAAA,KAAGmE,MAAM,QAAO,mNAOlBpE,IAAAC,cAAA,OAAKmE,MAAM,YACTpE,IAAAC,cAAA,OACEmE,MAAM,8EACNnB,MAAM,MACN4D,OAAO,MACP/B,IAAI,oLAKV9E,IAAAC,cAAA,MAAImE,MAAM,uBAEVpE,IAAAC,cAAA,OAAKmE,MAAM,kBACTpE,IAAAC,cAAA,OAAKmE,MAAM,uBACTpE,IAAAC,cAAA,MAAImE,MAAM,sBAAqB,iBACd,IACfpE,IAAAC,cAAA,QAAMmE,MAAM,cAAa,YAI3BpE,IAAAC,cAAA,KAAGmE,MAAM,QAAO,mNAOlBpE,IAAAC,cAAA,OAAKmE,MAAM,uBACTpE,IAAAC,cAAA,OACEmE,MAAM,8EACNnB,MAAM,MACN4D,OAAO,MACP/B,IAAI,wLAKV9E,IAAAC,cAAA,MAAImE,MAAM,yBCnDD0C,OAVf,WACI,OAEJ9G,IAAAC,cAAA,UAAQmE,MAAM,aACVpE,IAAAC,cAAA,KAAGmE,MAAM,eAAcpE,IAAAC,cAAA,KAAG8G,KAAK,KAAI,gBACnC/G,IAAAC,cAAA,SAAG,0BAA6BD,IAAAC,cAAA,KAAG8G,KAAK,KAAI,WAAW,SAAU/G,IAAAC,cAAA,KAAG8G,KAAK,KAAI,Y,6BCclEC,OAlBG1L,IAAoC,IAAnC,OAAE2L,EAAM,QAAEC,EAAO,SAAEnH,GAAUzE,EAC9C,MAAM6L,EAAaC,KAAW,CAC5B,iBAAiB,EACjB,UAAWH,IAGb,OACEjH,IAAAC,cAAA,OAAKC,UAAWiH,EAAYpD,QAASmD,GACnClH,IAAAC,cAAA,OAAKC,UAAU,gBAAgB6D,QAAShC,GAAKA,EAAEsF,mBAC7CrH,IAAAC,cAAA,UAAQC,UAAU,cAAc6D,QAASmD,GAAS,QAGjDnH,K,iGCQT,MAAMF,GAAcvE,IAA6B,IAA5B,SAAEwE,EAAQ,SAAEC,GAAUzE,EACzBgM,6BAAkB,UAAW,YAA7C,MACMC,EAASD,6BAAkB,QAAS,YACpCE,EAAYF,6BAAkB,WAAY,YAEhD,OACEtH,IAAAC,cAACyC,KAAG,CACFC,GAAI4E,EACJE,EAAG,EACHC,QAAQ,MACRC,OAAO,KACPC,YAAY,MACZC,YAAaP,6BAAkB,WAAY,YAC3CQ,EAAE,OACFC,KAAK,MAEL/H,IAAAC,cAAC+H,KAAM,CAACpE,QAAS,EAAGqE,MAAM,UAAUC,UAAU,SAASC,GAAI,GACzDnI,IAAAC,cAACmI,KAAO,CAAC7E,GAAG,KAAK8E,KAAK,KAAKzF,MAAM,YAC9B9C,GAEHE,IAAAC,cAAC4D,KAAI,CAACjB,MAAO4E,GAAW,wCAIzBzH,IAKDc,GAAW1C,IAAA,IAAC,KAAErE,GAAMqE,EAAA,MAAM,CAC9BnF,YAAac,EAAKd,cAgJLsP,OA7IA5J,IAAkB,IAAjB,QAAEwI,GAASxI,EACzB,MAAMsC,EAAWC,cACXC,EAAUC,gBACV,YAAEnI,GAAgBoI,YAAYP,KAE7B/E,EAAOuF,GAAYC,mBAAS,KAC5B/D,EAAUgL,GAAejH,mBAAS,KAClCkH,EAAcC,GAAmBnH,oBAAS,IAE1CoH,EAAaC,GAAkBrH,oBAAS,GAE/CG,oBAAU,KACJzI,IAEEkO,GACFA,IAGFhG,EAAQQ,KAAK,OAEd,CAAC1I,EAAakI,EAASgG,IAE1BzF,oBAAU,KAEHzI,GACH2P,GAAe,IAEhB,CAAC3P,IAEJ,MAkBM4P,EAAoBxB,KAAW,CACnC,wBAAwB,EACxB,cAAesB,IAGjB,OACE1I,IAAAC,cAAA,OACEC,UAAW0I,EACXC,MAAO,CACLC,gBAAgB,OAADpN,OAASoN,KAAe,KACvCC,eAAgB,QAChBC,mBAAoB,SACpBC,UAAW,QACXhG,MAAO,OACPiG,QAAS,OACT7F,WAAY,SACZC,eAAgB,WAGlBtD,IAAAC,cAACJ,GAAW,CAACC,SAAS,gBACpBE,IAAAC,cAAA,QAAMgC,SAjCUF,IACpBA,EAAEG,iBACFlB,ElB3F2C,CAC7CvH,KAAMtB,EAAUC,oBAChBuB,QkByF4B,CAAEmC,QAAOyB,gBAgC7ByC,IAAAC,cAAC+H,KAAM,CAACpE,QAAS,EAAGqE,MAAM,WACxBjI,IAAAC,cAACkJ,KAAW,CAAC/L,GAAG,QAAQgM,YAAU,GAChCpJ,IAAAC,cAACoJ,KAAS,KAAC,iBACXrJ,IAAAC,cAACqJ,KAAK,CACJ7P,KAAK,QACL2I,MAAOtG,EACP6E,SAAWoB,GAAMV,EAASU,EAAEO,OAAOF,OACnCC,YAAY,kBACZwF,YAAY,WACZ0B,iBAAiB,aAEnBvJ,IAAAC,cAACuJ,KAAc,KAAC,kCAElBxJ,IAAAC,cAACkJ,KAAW,CAAC/L,GAAG,WAAWgM,YAAU,GACnCpJ,IAAAC,cAACoJ,KAAS,KAAC,YACXrJ,IAAAC,cAACwJ,KAAU,KACTzJ,IAAAC,cAACqJ,KAAK,CACJ7P,KAAM+O,EAAe,OAAS,WAC9BpG,MAAO7E,EACPoD,SAAWoB,GAAMwG,EAAYxG,EAAEO,OAAOF,OACtCC,YAAY,mDACZwF,YAAY,WACZ0B,iBAAiB,aAEnBvJ,IAAAC,cAACyJ,KAAiB,CAACzG,MAAM,UACvBjD,IAAAC,cAACW,KAAM,CACLwC,EAAE,UACFiF,KAAK,KACLtE,QAASA,IAAM0E,GAAiBD,IAE/BA,EAAe,OAAS,UAI/BxI,IAAAC,cAACuJ,KAAc,KACbxJ,IAAAC,cAACsC,IAAI,CAACC,GAAG,kBACPxC,IAAAC,cAAC4D,KAAI,CAACjB,MAAM,WAAWc,WAAW,UAAS,uBAIjD1D,IAAAC,cAACW,KAAM,CACLnH,KAAK,SACLqK,YAAY,OACZuE,KAAK,KACLX,QAAQ,KACRzE,MAAM,OACN0G,GAAI,GACL,WAGD3J,IAAAC,cAACW,KAAM,CACLgJ,SAAU5J,IAAAC,cAAC4J,KAAQ,MACnB/F,YAAY,OACZuE,KAAK,KACLX,QAAQ,KACRzE,MAAM,OACNc,QArFe+F,KlBhDKnQ,MkBiD9BqH,ElBjDqC,CACvCvH,KAAM,uBACNE,QAASA,MkBoIE,uBAGDqG,IAAAC,cAAC0D,KAAM,CAACC,QAAS,EAAGmG,QAAQ,SAASJ,GAAI,GACvC3J,IAAAC,cAAC4D,KAAI,KAAC,0BACN7D,IAAAC,cAACsC,IAAI,CAACC,GAAG,iBACPxC,IAAAC,cAAC4D,KAAI,CAACjB,MAAM,WAAWc,WAAW,QAAO,mBCrKzD,MAAM7D,GAAcvE,IAA6B,IAA5B,SAAEwE,EAAQ,SAAEC,GAAUzE,EACzBgM,6BAAkB,UAAW,YAA7C,MACMC,EAASD,6BAAkB,QAAS,YACpCE,EAAYF,6BAAkB,WAAY,YAEhD,OACItH,IAAAC,cAACyC,KAAG,CACFC,GAAI4E,EACJE,EAAG,EACHC,QAAQ,MACRC,OAAO,KACPC,YAAY,MACZC,YAAaP,6BAAkB,WAAY,YAC3CQ,EAAE,OACFC,KAAK,MAEL/H,IAAAC,cAAC+H,KAAM,CAACpE,QAAS,EAAGqE,MAAM,UAAUC,UAAU,SAASC,GAAI,GACzDnI,IAAAC,cAACmI,KAAO,CAAC7E,GAAG,KAAK8E,KAAK,KAAKzF,MAAM,YAC9B9C,GAEHE,IAAAC,cAAC4D,KAAI,CAACjB,MAAO4E,GAAW,uCAIzBzH,IAKHc,GAAW1C,IAAA,IAAC,KAAErE,GAAMqE,EAAA,MAAM,CAC9BnF,YAAac,EAAKd,YAClBE,QAASY,EAAKZ,UA4JD8Q,OAzJAA,KACb,MAAMhJ,EAAWC,cACXC,EAAUC,gBACV,YAAEnI,EAAW,QAAEE,GAAYkI,YAAYP,KAEtChF,EAAaoO,GAAkB3I,mBAAS,KACxCxF,EAAOuF,GAAYC,mBAAS,KAC5B/D,EAAUgL,GAAejH,mBAAS,KAClClD,EAAiB8L,GAAsB5I,mBAAS,KAChDC,EAAQC,GAAaF,mBAAS,KAC9BkH,EAAcC,GAAmBnH,oBAAS,GAEjDG,oBAAU,KACJzI,IACFmR,IACAjJ,EAAQQ,KAAK,OAEd,CAAC1I,EAAakI,IAEjBO,oBAAU,KACJE,MAAMC,QAAQ1I,IAAYA,EAAQI,OAAS,GAC7CkI,EAAUtI,IAEX,CAACA,IAEJ,MAAMiR,EAAQA,KACZF,EAAe,IACf5I,EAAS,IACTkH,EAAY,IACZ2B,EAAmB,IACnB1I,EAAU,KAeNK,EAAoB,CACxB/B,SAAU,kBAGZ,OACEE,IAAAC,cAAA,OACEC,UAAWkH,KAAW,CACpB,wBAAwB,EACxB,eAAe,IAEjByB,MAAO,CACLC,gBAAgB,OAADpN,OAASoN,KAAe,KACvCC,eAAgB,QAChBC,mBAAoB,SACpBC,UAAW,QACXhG,MAAO,OACPiG,QAAS,OACT7F,WAAY,SACZC,eAAgB,WAGlBtD,IAAAC,cAACJ,GAAgBgC,EACf7B,IAAAC,cAAA,QAAMgC,SAlCcmI,IACxBA,EAAMlI,iBACNlB,EnBpE0C,CAC5CvH,KAAMtB,EAAUM,mBAChBkB,QmBmEoB,CACdkC,cACAC,QACAyB,WACAa,uBA4BE4B,IAAAC,cAAC+H,KAAM,CAACpE,QAAS,EAAGqE,MAAM,WACvB1G,EAAOjI,OAAS,GACf0G,IAAAC,cAACyC,KAAG,CAACE,MAAM,UAAU6E,EAAG,EAAGC,QAAQ,KAAKE,YAAY,MAAMC,YAAY,WACnEtG,EAAOO,IAAI,CAAC1F,EAAK4F,IAChBhC,IAAAC,cAAC4D,KAAI,CAAC7J,IAAKgI,GAAQ5F,KAKzB4D,IAAAC,cAACkJ,KAAW,CAAC/L,GAAG,cAAcgM,YAAU,GACtCpJ,IAAAC,cAACoJ,KAAS,KAAC,aACXrJ,IAAAC,cAACqJ,KAAK,CACJ7P,KAAK,OACL2I,MAAOvG,EACP8E,SAAWoB,GAAMkI,EAAelI,EAAEO,OAAOF,OACzCC,YAAY,WACZwF,YAAY,WACZ0B,iBAAiB,cAIrBvJ,IAAAC,cAACkJ,KAAW,CAAC/L,GAAG,QAAQgM,YAAU,GAChCpJ,IAAAC,cAACoJ,KAAS,KAAC,iBACXrJ,IAAAC,cAACqJ,KAAK,CACJ7P,KAAK,QACL2I,MAAOtG,EACP6E,SAAWoB,GAAMV,EAASU,EAAEO,OAAOF,OACnCC,YAAY,kBACZwF,YAAY,WACZ0B,iBAAiB,cAIrBvJ,IAAAC,cAACkJ,KAAW,CAAC/L,GAAG,WAAWgM,YAAU,GACnCpJ,IAAAC,cAACoJ,KAAS,KAAC,YACXrJ,IAAAC,cAACwJ,KAAU,KACTzJ,IAAAC,cAACqJ,KAAK,CACJ7P,KAAM+O,EAAe,OAAS,WAC9BpG,MAAO7E,EACPoD,SAAWoB,GAAMwG,EAAYxG,EAAEO,OAAOF,OACtCC,YAAY,mDACZwF,YAAY,WACZ0B,iBAAiB,aAEnBvJ,IAAAC,cAACyJ,KAAiB,CAACzG,MAAM,UACvBjD,IAAAC,cAACW,KAAM,CACLwC,EAAE,UACFiF,KAAK,KACLtE,QAASA,IAAM0E,GAAiBD,IAE/BA,EAAe,OAAS,WAMjCxI,IAAAC,cAACkJ,KAAW,CAAC/L,GAAG,kBAAkBgM,YAAU,GAC1CpJ,IAAAC,cAACoJ,KAAS,KAAC,oBACXrJ,IAAAC,cAACqJ,KAAK,CACJ7P,KAAM+O,EAAe,OAAS,WAC9BpG,MAAOhE,EACPuC,SAAWoB,GAAMmI,EAAmBnI,EAAEO,OAAOF,OAC7CC,YAAY,mDACZwF,YAAY,WACZ0B,iBAAiB,cAIrBvJ,IAAAC,cAACW,KAAM,CAACnH,KAAK,SAASqK,YAAY,OAAOuE,KAAK,KAAKX,QAAQ,KAAKzE,MAAM,OAAO0G,GAAI,GAAG,cAMxF3J,IAAAC,cAAC0D,KAAM,CAACC,QAAS,EAAGmG,QAAQ,SAASJ,GAAI,GACvC3J,IAAAC,cAAC4D,KAAI,KAAC,4BACN7D,IAAAC,cAACsC,IAAI,CAACC,GAAG,WACPxC,IAAAC,cAAC4D,KAAI,CAACjB,MAAM,WAAWc,WAAW,QAAO,e,OC/LrD,MAAM7C,GAAWvF,IAAA,IAAC,KAAExB,GAAMwB,EAAA,MAAM,CAC9BtC,YAAac,EAAKd,cAoDLqR,OAjDDtJ,IACZ,MAAM,YAAE/H,GAAgBoI,YAAYP,KAC7B6H,EAAaC,GAAkBrH,oBAAS,IACxCgJ,EAAUC,GAAejJ,mBAAS,UAGzCG,oBAAU,KACHzI,GACH2P,GAAe,IAEhB,CAAC3P,IAGJ,MAAMwR,EAAmBA,KACvB7B,GAAe,IAIX8B,EAAkBC,IACtBH,EAAYG,IAYd,OACE1K,IAAAC,cAAAD,IAAAiE,SAAA,KACEjE,IAAAC,cAAA,OAAKC,UAAU,wBACbF,IAAAC,cAACiE,GAAWnD,GAEZf,IAAAC,cAAC0K,GAAS,MACV3K,IAAAC,cAAC2K,GAAM,OAGRlC,GACC1I,IAAAC,cAAC+G,GAAS,CAACE,QAASsD,GAjBP,WAAbF,EACKtK,IAAAC,cAACqI,GAAM,CAACpB,QAASsD,EAAkBK,aAAcJ,IAEjDzK,IAAAC,cAAC+J,GAAM,CAAC9C,QAASsD,EAAkBK,aAAcJ,O,UC/B/CK,OAPA/J,GAEXf,IAAAC,cAAC8K,KAAM,KACT/K,IAAAC,cAACqI,GAAM,OCAM0C,OAJOjK,GACXf,IAAAC,cAAC+J,GAAM,MC2CHiB,OA3BFlK,IACX,MAAMC,EAAWC,cAKjB,OAHAQ,oBAAU,KACRT,EvBZ4B,CAC9BvH,KAAMtB,EAAUG,sBuBYb,IAED0H,IAAAC,cAAAD,IAAAiE,SAAA,KACEjE,IAAAC,cAACiL,KAAM,KACLlL,IAAAC,cAACkL,KAAK,CAACC,KAAK,UAAUC,OAAQA,IAAMrL,IAAAC,cAAC6K,GAAK,QAC1C9K,IAAAC,cAACkL,KAAK,CAACC,KAAK,iBAAiBC,OAAQA,IAAMrL,IAAAC,cAACqL,GAAa,QACxDtL,IAAAC,cAACkL,KAAK,CAACC,KAAK,gBAAgBC,OAAQA,IAAMrL,IAAAC,cAAC+K,GAAY,QACxDhL,IAAAC,cAACkL,KAAK,CAACI,OAAK,EAACH,KAAK,IAAIC,OAAQA,IAE5BrL,IAAAC,cAACoK,GAAI,QAEPrK,IAAAC,cAACkL,KAAK,CAACC,KAAK,SAASC,OAAQA,IAAMrL,IAAAC,cAACuL,GAAK,QACzCxL,IAAAC,cAACkL,KAAK,CAACC,KAAK,QAAQC,OAAQA,IAAMrL,IAAAC,cAACwL,GAAI,QACvCzL,IAAAC,cAACkL,KAAK,CAACC,KAAK,SAASC,OAAQA,IAAMrL,IAAAC,cAACyL,GAAK,QACzC1L,IAAAC,cAACkL,KAAK,CAACC,KAAK,SAASC,OAAQA,IAAMrL,IAAAC,cAACuL,GAAK,QACzCxL,IAAAC,cAACkL,KAAK,CAACC,KAAK,SAASC,OAAQA,IAAOrL,IAAAC,cAAC0L,GAAK,WC5B9BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,aCRNC,IAASZ,OACPrL,IAAAC,cAACD,IAAMkM,WAAU,KACflM,IAAAC,cAACkM,IAAQ,CAAC7M,MAAOA,GACfU,IAAAC,cAACmM,IAAU,KACTpM,IAAAC,cAACoM,IAAW,CAAC1M,UAAWA,GACxBK,IAAAC,cAACqM,KAAc,KACbtM,IAAAC,cAACgL,GAAG,QAES,KACH,KACJ,KAEdsB,SAASC,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7P,KAAK8P,IACJA,EAAaC,eAEd9P,MAAMiJ,IACL1H,QAAQ0H,MAAMA,EAAMxB,Y,mBEzI5BsI,EAAOC,QAAU,IAA0B,8D","file":"static/js/main.e50509b0.chunk.js","sourcesContent":["const userTypes = {\n    EMAIL_SIGN_IN_START: 'EMAIL_SIGN_IN_START',\n    SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n    CHECK_USER_SESSION: 'CHECK_USER_SESSION',\n    SIGN_OUT_USER_START: 'SIGN_OUT_USER_START',\n    SIGN_OUT_USER_SUCCESS: 'SIGN_OUT_USER_SUCCESS',\n    SIGN_UP_USER_START: 'SIGN_UP_USER_START',\n    RESET_PASSWORD_START: 'RESET_PASSWORD_START',\n    RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS',\n    GOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\n    USER_ERROR: 'USER_ERROR',\n    RESET_USER_STATE: 'RESET_USER_STATE'\n  };\n  \n  export default userTypes;","import userTypes from './user.types';\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  resetPasswordSuccess: false,\n  userErr: []\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case userTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n        userErr: []\n      }\n    case userTypes.RESET_PASSWORD_SUCCESS:\n      return {\n        ...state,\n        resetPasswordSuccess: action.payload\n      }\n    case userTypes.USER_ERROR:\n      return {\n        ...state,\n        userErr: action.payload\n      }\n    case userTypes.RESET_USER_STATE:\n    case userTypes.SIGN_OUT_USER_SUCCESS:\n      return {\n        ...state,\n        ...INITIAL_STATE\n      }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport userReducer from './User/user.reducer';\n\n\nexport const rootReducer = combineReducers({\n  user: userReducer,\n});\n\nconst configStorage = {\n  key: 'root',\n  storage,\n  whitelist: ['cartData']\n};\n\nexport default persistReducer(configStorage, rootReducer);","\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from './config';\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider()\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(googleProvider).then((res) => {\n    console.log(res.user)\n  }).catch((error) => {\n    console.log(error.message)\n  })\n}\n\nexport const handleUserProfile = async ({ userAuth, additionalData }) => {\n  if (!userAuth) return;\n  const { uid } = userAuth;\n\n  const userRef = firestore.doc(`users/${uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const { displayName, email } = userAuth;\n    const timestamp = new Date();\n    const userRoles = ['user'];\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdDate: timestamp,\n        userRoles,\n        ...additionalData\n      });\n    } catch(err) {\n      // console.log(err);\n    }\n  }\n\n  return userRef;\n};\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  })\n}","export const firebaseConfig = {\n    apiKey: \"AIzaSyA0-6Hfs-mPBB5Xyl3GyZ3tPPzDfSdEhaI\",\n    authDomain: \"artscape-97160.firebaseapp.com\",\n    databaseURL: \"https://artscape-97160.firebaseio.com\",\n    projectId: \"artscape-97160\",\n    storageBucket: \"artscape-97160.appspot.com\",\n    messagingSenderId: \"706465248594\",\n    appId: \"1:706465248594:web:bfae4b511225986cdd768b\",\n    measurementId: \"G-58YLW8N1N8\"\n  };\n\n  ","import userTypes from './user.types';\n\nexport const emailSignInStart = userCredentials => ({\n  type: userTypes.EMAIL_SIGN_IN_START,\n  payload: userCredentials\n});\n\nexport const signInSuccess = user => ({\n  type: userTypes.SIGN_IN_SUCCESS,\n  payload: user\n});\n\nexport const checkUserSession = () => ({\n  type: userTypes.CHECK_USER_SESSION\n});\n\nexport const signOutUserStart = () => ({\n  type: userTypes.SIGN_OUT_USER_START\n});\n\nexport const signOutUserSuccess = () => ({\n  type: userTypes.SIGN_OUT_USER_SUCCESS\n});\n\nexport const signUpUserStart = userCredentials => ({\n  type: userTypes.SIGN_UP_USER_START,\n  payload: userCredentials\n});\n\nexport const userError = err => ({\n  type: userTypes.USER_ERROR,\n  payload: err\n});\n\nexport const resetPasswordStart = userCredentials => ({\n  type: userTypes.RESET_PASSWORD_START,\n  payload: userCredentials\n});\n\nexport const resetPasswordSuccess = () => ({\n  type: userTypes.RESET_PASSWORD_SUCCESS,\n  payload: true\n});\n\nexport const resetUserState = () => ({\n  type: userTypes.RESET_USER_STATE\n});\n\nexport const googleSignInStart = (payload) => ({\n  type: 'GOOGLE_SIGN_IN_START',\n  payload: payload\n});","   \nimport { auth } from './../../Firebase/Utils';\n\nexport const handleResetPasswordAPI = (email) => {\n  const config = {\n    url: 'http://localhost:3000/login'\n  };\n\n  return new Promise((resolve, reject) => {\n    auth.sendPasswordResetEmail(email, config)\n      .then(() => {\n        resolve();\n      })\n      .catch(() => {\n        const err = ['Email not found. Please try again.'];\n        reject(err);\n      });\n  });\n};","import { takeLatest, call, all, put, select } from 'redux-saga/effects';\nimport { auth, handleUserProfile, getCurrentUser, googleProvider } from './../../Firebase/Utils';\nimport userTypes from './user.types';\nimport { signInSuccess, signOutUserSuccess, resetPasswordSuccess, userError } from './user.actions';\nimport { handleResetPasswordAPI } from './user.helpers';\n\n\nexport function* getSnapshotFromUserAuth(user, additionalData = {}) {\n  try {\n    const userRef = yield call(handleUserProfile, { userAuth: user, additionalData });\n    const snapshot = yield userRef.get();\n    yield put(\n      signInSuccess({\n        id: snapshot.id,\n        ...snapshot.data()\n      })\n    );\n\n  } catch (err) {\n    // console.log(err);\n  }\n}\n\nexport function* emailSignIn({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n\n  } catch (err) {\n    // console.log(err);\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(userTypes.EMAIL_SIGN_IN_START, emailSignIn);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n\n  } catch (err) {\n    // console.log(err);\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(userTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* signOutUser() {\n  try {\n    yield auth.signOut();\n    yield put(\n      signOutUserSuccess()\n    )\n\n  } catch (err) {\n    // console.log(err);\n  }\n}\n\nexport function* onSignOutUserStart() {\n  yield takeLatest(userTypes.SIGN_OUT_USER_START, signOutUser);\n}\n\nexport function* signUpUser({ payload: {\n  displayName,\n  email,\n  password,\n  confirmPassword\n} }) {\n\n  if (password !== confirmPassword) {\n    const err = ['Password Don\\'t match'];\n    yield put(\n      userError(err)\n    );\n    return;\n  }\n\n  try {\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    const additionalData = { displayName };\n    yield getSnapshotFromUserAuth(user, additionalData);\n\n  } catch (err) {\n    console.log(err);\n  }\n\n}\n\nexport function* onSignUpUserStart() {\n  yield takeLatest(userTypes.SIGN_UP_USER_START, signUpUser);\n}\n\nexport function* resetPassword({ payload: { email }}) {\n  try {\n    yield call(handleResetPasswordAPI, email);\n    yield put(\n      resetPasswordSuccess()\n    );\n\n  } catch (err) {\n    yield put(\n      userError(err)\n    )\n  }\n}\n\nexport function* onResetPasswordStart() {\n  yield takeLatest(userTypes.RESET_PASSWORD_START, resetPassword);\n}\n\n\nexport function* googleSignIn() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n    // After a successful login, the user state will be updated in Redux.\n  } catch (err) {\n    // Handle error\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\n\n\nexport default function* userSagas() {\n  yield all([\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutUserStart),\n    call(onSignUpUserStart),\n    call(onResetPasswordStart),\n    call(onGoogleSignInStart),\n  ])\n}","import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport createSagaMiddle from 'redux-saga';\nimport { persistStore } from 'redux-persist';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddle();\nexport const middlewares = [thunk, sagaMiddleware, logger];\n\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)));\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default {\n  store,\n  persistor\n};","import { all, call } from 'redux-saga/effects';\n\nimport userSagas from './User/user.sagas';\n\n\nexport default function* rootSaga() {\n  yield all([\n    call(userSagas),\n  ])\n}","import React from 'react';\n\nconst AuthWrapper = ({ headline, children }) => {\n    return (\n      <div className=\"authWrapper\">\n        <div className=\"wrap\">\n          {headline && <h2>{headline}</h2>}\n  \n          <div className=\"children\">\n            {children && children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  export default AuthWrapper;","import React from \"react\";\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => {\n  return (\n    <div className=\"formRow\">\n      {label && <label>{label}</label>}\n\n      <input className=\"formInput\" onChange={handleChange} {...otherProps} />\n    </div>\n  );\n};\n\nexport default FormInput;\n","import React from 'react';\n\n\nconst Button = ({ children, ...otherProps }) => {\n  return (\n    <button className=\"btn\" {...otherProps}>\n      {children}\n    </button>\n  );\n}\n\nexport default Button","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport {\n  resetPasswordStart,\n  resetUserState,\n} from \"../../redux/User/user.actions\";\n\nimport AuthWrapper from \"./../AuthWrapper\";\nimport FormInput from \"./../forms/FormInput\";\nimport Button from \"./../forms/Button\";\n\nconst mapState = ({ user }) => ({\n  resetPasswordSuccess: user.resetPasswordSuccess,\n  userErr: user.userErr,\n});\n\nconst EmailPassword = (props) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { resetPasswordSuccess, userErr } = useSelector(mapState);\n  const [email, setEmail] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  useEffect(() => {\n    if (resetPasswordSuccess) {\n      dispatch(resetUserState());\n      history.push(\"/signin\");\n    }\n  }, [resetPasswordSuccess]);\n\n  useEffect(() => {\n    if (Array.isArray(userErr) && userErr.length > 0) {\n      setErrors(userErr);\n    }\n  }, [userErr]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(resetPasswordStart({ email }));\n  };\n\n  const configAuthWrapper = {\n    headline: \"Email Password\",\n  };\n\n  return (\n    <AuthWrapper {...configAuthWrapper}>\n      <div className=\"formWrap\">\n        {errors.length > 0 && (\n          <ul>\n            {\" \"}\n            {errors.map((e, index) => {\n              return <li key={index}> {e} </li>;\n            })}{\" \"}\n          </ul>\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            placeholder=\"Email\"\n            handleChange={(e) => setEmail(e.target.value)}\n          />\n\n          <Button type=\"submit\">Email Password </Button>\n        </form>\n\n        <div className=\"links\">\n          <Link to=\"/signin\">LogIn </Link> {` | `}{\" \"}\n          <Link to=\"/signup\">Register </Link>{\" \"}\n        </div>\n      </div>{\" \"}\n    </AuthWrapper>\n  );\n};\n\nexport default EmailPassword;\n","import React from 'react';\nimport { Box, Flex, HStack, Text, Button, Link } from '@chakra-ui/react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signOutUserStart } from '../../redux/User/user.actions';\n\nconst mapState = (state) => ({\n    currentUser: state.user.currentUser,\n});\n\nconst ChakraNavbar = () => {\n    const dispatch = useDispatch();\n    const { currentUser } = useSelector(mapState);\n\n    const signOut = () => {\n        dispatch(signOutUserStart());\n    };\n\n    return (\n        <Box bg=\"gray.800\" color=\"white\" px={4} py={2} position=\"fixed\" top=\"0\" width=\"full\" zIndex=\"1000\">\n            <Flex h={16} alignItems=\"center\" justifyContent=\"space-between\">\n                <Box>\n                    <Link as={RouterLink} to=\"/\" fontSize=\"xl\" fontWeight=\"bold\">NoName</Link>\n                </Box>\n                \n                {currentUser ? (\n                    <HStack spacing={8} alignItems=\"center\">\n                        <Link as={RouterLink} to=\"/feed\">\n                            <Text>CHAT</Text>\n                        </Link>\n                        <Link as={RouterLink} to=\"/sales\">\n                            <Text>Sales HUB</Text>\n                        </Link><Link as={RouterLink} to=\"/games\">\n                            <Text>GAMES</Text>\n                        </Link><Link as={RouterLink} to=\"/notes\">\n                            <Text>NOTES</Text>\n                        </Link>\n                        <Button colorScheme=\"teal\" onClick={signOut}>Sign out</Button>\n                    </HStack>\n                ) : (\n                    <HStack spacing={8} alignItems=\"center\">\n                        <Link as={RouterLink} to=\"/signin\">\n                            <Text>Login</Text>\n                        </Link>\n                    </HStack>\n                )}\n            </Flex>\n        </Box>\n    );\n};\n\nexport default ChakraNavbar;\n","import React from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport \"./style.css\";\n\nfunction game() {\n  return (\n    <>\n    <Navbar />\n    <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n  \n    </main>\n    </>\n  );\n}\n\nexport default game;\n\n\n","import React, { useRef, useState, useEffect } from 'react';\nimport 'firebase/firestore';\nimport 'firebase/analytics';\nimport 'firebase/auth';\nimport firebase from 'firebase/app';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nimport './style.css'; // Import the external CSS file\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction Chat(){\n    const dummy = useRef();\n    const messagesRef = firestore.collection('messages');\n    const query = messagesRef.orderBy('createdAt').limit(25);\n\n    const [messages] = useCollectionData(query, { idField: 'id' });\n    const [formValue, setFormValue] = useState('');\n\n    // Use a state variable to hold the current user to handle the asynchronous nature of Firebase Auth\n    const [currentUser, setCurrentUser] = useState(auth.currentUser);\n\n    useEffect(() => {\n        // This listener will fire whenever the auth state changes (e.g., user signs in or out)\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            setCurrentUser(user);\n        });\n\n        // Cleanup the listener on component unmount\n        return () => unsubscribe();\n    }, []);\n\n\n    const sendMessage = async (e) => {\n        e.preventDefault();\n\n        // Check if currentUser is defined before accessing its properties\n        if (!currentUser) {\n            console.error(\"User is not authenticated. Please log in.\");\n            return;\n        }\n\n        const { uid, photoURL } = currentUser;\n\n        await messagesRef.add({\n            text: formValue,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            uid,\n            photoURL\n        })\n\n        setFormValue('');\n        dummy.current.scrollIntoView({ behavior: 'smooth' });\n    }\n\n    return (\n        <div className=\"chat-container\">\n            <main className=\"chat-messages\">\n                {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} currentUserUid={currentUser?.uid} />)}\n                <span ref={dummy}></span>\n            </main>\n            <form className=\"chat-input\" onSubmit={sendMessage}>\n                <input\n                    value={formValue}\n                    onChange={(e) => setFormValue(e.target.value)}\n                    placeholder=\"say something nice\"\n                />\n                <button type=\"submit\" disabled={!formValue}>\n                    🕊️\n                </button>\n            </form>\n        </div>\n    );\n}\n\nfunction ChatMessage(props) {\n    const { text, uid, photoURL } = props.message;\n    // We now get the current user's uid from props, which is safe to use\n    const currentUserUid = props.currentUserUid;\n  \n    const messageClass = uid === currentUserUid ? 'my-message' : 'other-message';\n    // Check if uid is defined before calling substring\n    const finalPhotoURL = photoURL || `https://placehold.co/40x40/5c7c9a/FFFFFF?text=${uid ? uid.substring(0, 1).toUpperCase() : '?'}`;\n\n    return (\n        <div className={`chat-message ${messageClass}`}>\n            <div className=\"message-content\">\n                {messageClass === 'other-message' && (\n                    <img src={finalPhotoURL} alt=\"User Avatar\" className=\"chat-avatar\" />\n                )}\n                <div className=\"message-bubble\">\n                    <p>{text}</p>\n                </div>\n                {messageClass === 'my-message' && (\n                    <img src={finalPhotoURL} alt=\"User Avatar\" className=\"chat-avatar\" />\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;","import React from \"react\";\nimport Chat from \"../../components/Chat\"\nimport Navbar from \"../../components/Navbar\";\nimport Sidebar from \"../../components/SideBar\";\nimport \"./style.css\";\n\nconst feed = (props) => {\n  return (\n    <div className=\"feed-container\">\n      <Navbar />\n      <main className=\"main-content\">\n        <Chat />\n      </main>\n    </div>\n  );\n}\n\nexport default feed;\n","import React from \"react\";\nimport Navbar from \"../../components/Navbar\";\n\n\nfunction notes() {\n  return (\n    <>\n    <Navbar />\n    <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n  \n    </main>\n    </>\n  );\n}\n\nexport default notes;\n","import React from \"react\";\nimport Navbar from \"../../components/Navbar\";\n\n\nfunction sales() {\n  return (\n    <>\n    <Navbar />\n    <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-md-4\">\n  \n    </main>\n    </>\n  );\n}\n\nexport default sales;","import React from \"react\";\nimport \"./style.css\";\n\nfunction marketing() {\n  return (\n    <div class=\"container marketing\">\n      <div class=\"row\">\n        \n      </div>\n\n      <hr class=\"featurette-divider\"></hr>\n\n      <div class=\"row featurette\">\n        <div class=\"col-md-7\">\n          <h2 class=\"featurette-heading\">\n            NOname.{\" \"}\n            <span class=\"text-muted\">\n              ncl employees learning\n            </span>\n          </h2>\n          <p class=\"lead\">\n            Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id\n            ligula porta felis euismod semper. Praesent commodo cursus magna,\n            vel scelerisque nisl consectetur. Fusce dapibus, tellus ac cursus\n            commodo.\n          </p>\n        </div>\n        <div class=\"col-md-5\">\n          <img\n            class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\"\n            width=\"500\"\n            height=\"500\"\n            src=\"https://images.unsplash.com/photo-1566954979172-eaba308acdf0?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTcyfHxhcnQlMjBnYWxsZXJ5fGVufDB8fDB8&auto=format&fit=crop&w=500&q=60\"\n          />\n        </div>\n      </div>\n\n      <hr class=\"featurette-divider\"></hr>\n\n      <div class=\"row featurette\">\n        <div class=\"col-md-7 order-md-2\">\n          <h2 class=\"featurette-heading\">\n            Feel Inspired?{\" \"}\n            <span class=\"text-muted\">\n              .......\n            </span>\n          </h2>\n          <p class=\"lead\">\n            Donec ullamcorper nulla non metus auctor fringilla. Vestibulum id\n            ligula porta felis euismod semper. Praesent commodo cursus magna,\n            vel scelerisque nisl consectetur. Fusce dapibus, tellus ac cursus\n            commodo.\n          </p>\n        </div>\n        <div class=\"col-md-5 order-md-1\">\n          <img\n            class=\"bd-placeholder-img bd-placeholder-img-lg featurette-image img-fluid mx-auto\"\n            width=\"500\"\n            height=\"500\"\n            src=\"https://images.unsplash.com/photo-1472457974886-0ebcd59440cc?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxzZWFyY2h8M3x8YXJ0JTIwY2xhc3Nlc3xlbnwwfHwwfA%3D%3D&auto=format&fit=crop&w=500&q=60\"\n          />\n        </div>\n      </div>\n\n      <hr class=\"featurette-divider\"></hr>\n    </div>\n  );\n}\n\nexport default marketing;\n","import React from \"react\";\n\n\nfunction footer() {\n    return (\n\n<footer class=\"container\">\n    <p class=\"float-right\"><a href=\"#\">Back to top</a></p>\n    <p>&copy; 2025 NoName. &middot; <a href=\"#\">Privacy</a> &middot; <a href=\"#\">Terms</a></p>\n  </footer>\n    );\n}\n\nexport default footer;","import React from 'react';\nimport './style.css';\nimport classNames from 'classnames';\n\nconst AuthModal = ({ isOpen, onClose, children }) => {\n  const modalClass = classNames({\n    'modal-overlay': true,\n    'is-open': isOpen,\n  });\n\n  return (\n    <div className={modalClass} onClick={onClose}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        <button className=\"modal-close\" onClick={onClose}>\n          &times;\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default AuthModal;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { emailSignInStart, googleSignInStart } from '../../redux/User/user.actions';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  InputGroup,\n  InputRightElement,\n  FormHelperText,\n  Heading,\n  Text,\n  VStack,\n  HStack,\n  Box,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { FaGoogle } from 'react-icons/fa';\nimport classNames from 'classnames';\nimport backgroundImage from '../../assets/images/ryan-johns-1MPHndKoQQ4-unsplash.jpg'; // Import the image\n\n// AuthWrapper remains the same\nconst AuthWrapper = ({ headline, children }) => {\n  const bgColor = useColorModeValue('gray.50', 'gray.800');\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const textColor = useColorModeValue('gray.700', 'gray.200');\n\n  return (\n    <Box\n      bg={cardBg}\n      p={8}\n      rounded=\"2xl\"\n      shadow=\"xl\"\n      borderWidth=\"1px\"\n      borderColor={useColorModeValue('gray.100', 'gray.600')}\n      w=\"full\"\n      maxW=\"md\"\n    >\n      <VStack spacing={4} align=\"stretch\" textAlign=\"center\" mb={6}>\n        <Heading as=\"h1\" size=\"xl\" color=\"blue.600\">\n          {headline}\n        </Heading>\n        <Text color={textColor}>\n          Sign in to your account to continue\n        </Text>\n      </VStack>\n      {children}\n    </Box>\n  );\n};\n\nconst mapState = ({ user }) => ({\n  currentUser: user.currentUser,\n});\n\nconst SignIn = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { currentUser } = useSelector(mapState);\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  \n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    if (currentUser) {\n      // 1. Check for onClose before calling it\n      if (onClose) {\n        onClose();\n      }\n      // 2. Redirect to the homepage after successful login\n      history.push('/');\n    }\n  }, [currentUser, history, onClose]);\n\n  useEffect(() => {\n    // This hook is for opening the modal on a dedicated sign-in page, if you're not using a modal on the home page.\n    if (!currentUser) {\n      setIsModalOpen(true);\n    }\n  }, [currentUser]);\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(emailSignInStart({ email, password }));\n  };\n\n  const handleGoogleSignIn = () => {\n    dispatch(googleSignInStart());\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const signInPageClasses = classNames({\n    'sign-in-page-wrapper': true,\n    'blur-effect': isModalOpen,\n  });\n\n  return (\n    <div\n      className={signInPageClasses}\n      style={{\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        minHeight: '100vh',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <AuthWrapper headline=\"Welcome Back\">\n        <form onSubmit={handleSubmit}>\n          <VStack spacing={6} align=\"stretch\">\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email address</FormLabel>\n              <Input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"you@example.com\"\n                borderColor=\"gray.300\"\n                focusBorderColor=\"blue.500\"\n              />\n              <FormHelperText>We'll never share your email.</FormHelperText>\n            </FormControl>\n            <FormControl id=\"password\" isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  type={showPassword ? 'text' : 'password'}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  placeholder=\"••••••••\"\n                  borderColor=\"gray.300\"\n                  focusBorderColor=\"blue.500\"\n                />\n                <InputRightElement width=\"4.5rem\">\n                  <Button\n                    h=\"1.75rem\"\n                    size=\"sm\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? 'Hide' : 'Show'}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n              <FormHelperText>\n                <Link to=\"/passwordReset\">\n                  <Text color=\"blue.500\" fontWeight=\"medium\">Forgot password?</Text>\n                </Link>\n              </FormHelperText>\n            </FormControl>\n            <Button\n              type=\"submit\"\n              colorScheme=\"blue\"\n              size=\"lg\"\n              rounded=\"lg\"\n              width=\"full\"\n              mt={4}\n            >\n              Sign In\n            </Button>\n            <Button\n              leftIcon={<FaGoogle />}\n              colorScheme=\"gray\"\n              size=\"lg\"\n              rounded=\"lg\"\n              width=\"full\"\n              onClick={handleGoogleSignIn}\n            >\n              Sign in with Google\n            </Button>\n            <HStack spacing={1} justify=\"center\" mt={4}>\n              <Text>Don't have an account?</Text>\n              <Link to=\"/registration\">\n                <Text color=\"blue.500\" fontWeight=\"bold\">Register</Text>\n              </Link>\n            </HStack>\n          </VStack>\n        </form>\n      </AuthWrapper>\n    </div>\n  );\n};\n\nexport default SignIn;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport { signUpUserStart } from '../../redux/User/user.actions';\nimport classNames from 'classnames';\nimport backgroundImage from '../../assets/images/ryan-johns-1MPHndKoQQ4-unsplash.jpg';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  InputGroup,\n  InputRightElement,\n  Heading,\n  Text,\n  VStack,\n  HStack,\n  Box,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { FaGoogle } from 'react-icons/fa';\n\nconst AuthWrapper = ({ headline, children }) => {\n  const bgColor = useColorModeValue('gray.50', 'gray.800');\n  const cardBg = useColorModeValue('white', 'gray.700');\n  const textColor = useColorModeValue('gray.700', 'gray.200');\n\n  return (\n      <Box\n        bg={cardBg}\n        p={8}\n        rounded=\"2xl\"\n        shadow=\"xl\"\n        borderWidth=\"1px\"\n        borderColor={useColorModeValue('gray.100', 'gray.600')}\n        w=\"full\"\n        maxW=\"md\"\n      >\n        <VStack spacing={4} align=\"stretch\" textAlign=\"center\" mb={6}>\n          <Heading as=\"h1\" size=\"xl\" color=\"blue.600\">\n            {headline}\n          </Heading>\n          <Text color={textColor}>\n            Create your account to get started\n          </Text>\n        </VStack>\n        {children}\n      </Box>\n  );\n};\n\nconst mapState = ({ user }) => ({\n  currentUser: user.currentUser,\n  userErr: user.userErr,\n});\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { currentUser, userErr } = useSelector(mapState);\n\n  const [displayName, setDisplayName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errors, setErrors] = useState([]);\n  const [showPassword, setShowPassword] = useState(false);\n\n  useEffect(() => {\n    if (currentUser) {\n      reset();\n      history.push('/');\n    }\n  }, [currentUser, history]);\n\n  useEffect(() => {\n    if (Array.isArray(userErr) && userErr.length > 0) {\n      setErrors(userErr);\n    }\n  }, [userErr]);\n\n  const reset = () => {\n    setDisplayName('');\n    setEmail('');\n    setPassword('');\n    setConfirmPassword('');\n    setErrors([]);\n  };\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    dispatch(\n      signUpUserStart({\n        displayName,\n        email,\n        password,\n        confirmPassword,\n      })\n    );\n  };\n  \n  const configAuthWrapper = {\n    headline: 'Create Account',\n  };\n\n  return (\n    <div\n      className={classNames({\n        'sign-up-page-wrapper': true,\n        'blur-effect': false, // Change this to a state variable if you have a modal\n      })}\n      style={{\n        backgroundImage: `url(${backgroundImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        minHeight: '100vh',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <AuthWrapper {...configAuthWrapper}>\n        <form onSubmit={handleFormSubmit}>\n          <VStack spacing={6} align=\"stretch\">\n            {errors.length > 0 && (\n              <Box color=\"red.500\" p={2} rounded=\"md\" borderWidth=\"1px\" borderColor=\"red.200\">\n                {errors.map((err, index) => (\n                  <Text key={index}>{err}</Text>\n                ))}\n              </Box>\n            )}\n\n            <FormControl id=\"displayName\" isRequired>\n              <FormLabel>Full Name</FormLabel>\n              <Input\n                type=\"text\"\n                value={displayName}\n                onChange={(e) => setDisplayName(e.target.value)}\n                placeholder=\"John Doe\"\n                borderColor=\"gray.300\"\n                focusBorderColor=\"blue.500\"\n              />\n            </FormControl>\n\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email Address</FormLabel>\n              <Input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"you@example.com\"\n                borderColor=\"gray.300\"\n                focusBorderColor=\"blue.500\"\n              />\n            </FormControl>\n\n            <FormControl id=\"password\" isRequired>\n              <FormLabel>Password</FormLabel>\n              <InputGroup>\n                <Input\n                  type={showPassword ? 'text' : 'password'}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  placeholder=\"••••••••\"\n                  borderColor=\"gray.300\"\n                  focusBorderColor=\"blue.500\"\n                />\n                <InputRightElement width=\"4.5rem\">\n                  <Button\n                    h=\"1.75rem\"\n                    size=\"sm\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? 'Hide' : 'Show'}\n                  </Button>\n                </InputRightElement>\n              </InputGroup>\n            </FormControl>\n\n            <FormControl id=\"confirmPassword\" isRequired>\n              <FormLabel>Confirm Password</FormLabel>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                placeholder=\"••••••••\"\n                borderColor=\"gray.300\"\n                focusBorderColor=\"blue.500\"\n              />\n            </FormControl>\n\n            <Button type=\"submit\" colorScheme=\"blue\" size=\"lg\" rounded=\"lg\" width=\"full\" mt={4}>\n              Register\n            </Button>\n          </VStack>\n        </form>\n\n        <HStack spacing={1} justify=\"center\" mt={6}>\n          <Text>Already have an account?</Text>\n          <Link to=\"/signin\">\n            <Text color=\"blue.500\" fontWeight=\"bold\">Log In</Text>\n          </Link>\n        </HStack>\n      </AuthWrapper>\n    </div>\n  );\n};\n\nexport default Signup;","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Marketing from \"../../components/marketing\";\nimport Footer from \"../../components/Footer\";\nimport Navbar from \"../../components/Navbar\";\nimport AuthModal from \"../../components/AuthModal/\"; \nimport SignIn from \"../../components/SignIn\"; \nimport Signup from \"../../components/Signup\"; \nimport \"./style.css\";\n\n// Map the Redux user state to a prop\nconst mapState = ({ user }) => ({\n  currentUser: user.currentUser,\n});\n\nconst Home = (props) => {\n  const { currentUser } = useSelector(mapState);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [authMode, setAuthMode] = useState('signin'); // 'signin' or 'signup'\n\n  // The modal opens only if no user is logged in\n  useEffect(() => {\n    if (!currentUser) {\n      setIsModalOpen(true);\n    }\n  }, [currentUser]);\n\n  // Function to close the modal\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  \n  // Function to switch between sign-in and sign-up forms\n  const toggleAuthMode = (mode) => {\n    setAuthMode(mode);\n  };\n\n  // Conditionally render the correct authentication form\n  const renderAuthForm = () => {\n    if (authMode === 'signin') {\n      return <SignIn onClose={handleCloseModal} onToggleMode={toggleAuthMode} />;\n    } else {\n      return <Signup onClose={handleCloseModal} onToggleMode={toggleAuthMode} />;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"home-content-wrapper\">\n        <Navbar {...props} />\n\n        <Marketing />\n        <Footer />\n      </div>\n      {/* Conditionally render the modal */}\n      {isModalOpen && (\n        <AuthModal onClose={handleCloseModal}>\n          {renderAuthForm()}\n        </AuthModal>\n      )}\n    </>\n  );\n};\n\nexport default Home;","import React from \"react\";\nimport SignIn from \"./../../components/SignIn\";\nimport { Center } from \"@chakra-ui/react\";\n\nconst Login = (props) => {\n  return(\n    <Center>\n  <SignIn />\n  </Center>\n)};\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport Signup from \"../../components/Signup\";\n\nconst Registration = (props) => {\n    return <Signup /> ;\n};\n\nexport default Registration;","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { checkUserSession } from \"./redux/User/user.actions\";\n\n\n//Components\nimport PasswordReset from \"./components/PasswordReset\";\n\n\n//Pages\nimport Games from \"./Pages/game\";\nimport Feed from \"./Pages/Feed\";\nimport Notes from \"./Pages/Notes\";\nimport Sales from \"./Pages/Sales\";\nimport Home from \"./Pages/Home\";\nimport Login from \"./Pages/Login\";\nimport Registration from \"./Pages/registration\";\n\n\nconst App = (props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(checkUserSession());\n  }, []);\n  return (\n    <>\n      <Switch>\n        <Route path=\"/signin\" render={() => <Login />} />\n        <Route path=\"/passwordReset\" render={() => <PasswordReset />} />  \n         <Route path=\"/registration\" render={() => <Registration></Registration>} />\n        <Route exact path=\"/\" render={() => (\n     \n          <Home/>\n          )} />\n        <Route path=\"/games\" render={() => <Games></Games>} />\n        <Route path=\"/feed\" render={() => <Feed></Feed>} />\n        <Route path=\"/notes\" render={() => <Notes></Notes>} />\n        <Route path=\"/games\" render={() => <Games></Games>} />\n        <Route path=\"/sales\" render={() =>  <Sales></Sales>} />\n        \n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\"; \nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/createStore\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter> \n        <PersistGate persistor={persistor}> \n        <ChakraProvider>\n          <App />\n          </ChakraProvider>\n        </PersistGate>{\" \"}\n      </HashRouter>{\" \"}\n    </Provider>{\" \"}\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ryan-johns-1MPHndKoQQ4-unsplash.0c7a44f3.jpg\";"],"sourceRoot":""}